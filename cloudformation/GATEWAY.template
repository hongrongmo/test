{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create instances for EV in a public VPC that simulates public oracle client for later ssh dataloading instance and others",
  "Parameters": {
    "KeyPair": {
     "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores.",
      "Description": "Name of an existing EC2 KeyPair to enable remote access to the instances",
      "MaxLength": "64",
      "MinLength": "1",
      "Type": "String",
      "Default": "non-Prod"
    },
    "AMI": {
      "Default": "ami-876532ee",
      "Description": "AMI ID to use",
      "Type": "String"
    },
    "Environment": {
      "Type": "String",
      "MinLength": "1",
      "Description": "Options: int,dev,cert,load,prod,release",
      "AllowedValues": [
        "int",
        "dev",
        "cert",
        "load",
        "prod",
        "release"
      ],
      "Default": "dev"
    },
    "BillingID": {
        "Default": "NA",
        "Description": "Enter the Billing ID Tag for this account",
        "Type": "String"
    },
    "OwnerTag": {
      "Default": "EV",
      "Description": "Enter the Owner Tag for this account",
      "Type": "String"
    },
    "ProductTag": {
      "Default": "EVGateway",
      "Description": "Enter the Product Tag for this account (e.g., gsmobile, epmmns, fcmobile...)",
      "Type": "String"
    },
    "PuppetMasterDNSName": {
      "Default": "puppet.elsst.com",
      "Description": "Enter the Puppet Master server DNS name",
      "Type": "String"
    },
    
    "Subnet": {
      "Default": "subnet-87f131e6",
      "Description": "The VPC subnet you want to create the EC2 instance in",
      "Type": "String"
    },
    
     
    "InstanceType": {
      "Description": "Type of EC2 instance to launch",
      "ConstraintDescription": "must be a valid EC2 instance type.",
      "Type": "String",
      "AllowedValues": [
        "t1.micro",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.xlarge"
      ],
      "Default": "t1.micro"
    }
  },
  "Mappings": {
    "SubnetConfig": {
      "VPC": {
        "CIDR": "10.178.160.0/20",
        "ID": "vpc-90df1ff1"
      },
      "public": {
        "CIDIR": [
          "10.178.168/0/24",
          "10.178.166.0/24"
        ],
        "SUBNET": [
          "subnet-c7f030a6",
          "subnet-4ef1312f"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "na": {
        "CIDIR": [
          "10.178.161.0/25"
        ],
        "SUBNET": [
          "subnet-c6f131a7"
        ],
        "AZ": ["us-east-1a"]
      },
      "dev": {
        "CIDIR": [
          "10.178.161.128/25"
        ],
        "SUBNET": [
          "subnet-87f131e6"
        ],
        "AZ": ["us-east-1c"]
      },
      "int": {
        "CIDIR": [
          "10.178.169.0/24",
          "10.178.167.0/24"
        ],
        "SUBNET": [
          "subnet-d2f232b3",
          "subnet-29f23248"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "load": {
        "CIDIR": [
          "10.178.169.0/24",
          "10.178.167.0/24"
        ],
        "SUBNET": [
          "subnet-d2f232b3",
          "subnet-29f23248"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "cert": {
        "CIDIR": [
          "10.178.169.0/24",
          "10.178.167.0/24"
        ],
        "SUBNET": [
          "subnet-d2f232b3",
          "subnet-29f23248"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "ucd": {
        "CIDIR": [
          "10.178.169.0/24",
          "10.178.167.0/24"
        ],
        "SUBNET": [
          "subnet-d2f232b3",
          "subnet-29f23248"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "prod": {
        "CIDIR": [
          "10.178.165.0/24",
          "10.178.163.0/24"
        ],
        "SUBNET": [
          "subnet-aef232cf",
          "subnet-04f23265"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      },
      "release": {
        "CIDIR": [
          "10.178.165.0/24",
          "10.178.163.0/24"
        ],
        "SUBNET": [
          "subnet-aef232cf",
          "subnet-04f23265"
        ],
        "AZ": ["us-east-1c", "us-east-1a"]
      }
    }
  },
  "Resources": {
   
  "DataLoadGateway" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName"  : { "Ref" : "KeyPair" },
        "ImageId"  : { "Ref": "AMI" },
		"AvailabilityZone": "us-east-1c",
		"NetworkInterfaces" : [ 
		{
   "AssociatePublicIpAddress" : "true",
   "Description" : "Network Interface for EV-gateway in VPC",
   "DeviceIndex" : "0",
   "GroupSet" : [ "sg-b04cfcdf","sg-6a47a80f","sg-7b4dfd14","sg-6548f80a","sg-e6f34289"],
   "SubnetId" : "subnet-4ef1312f"
}
		],
        "Tags" : [
		 { "Key" : "Vpc", "Value" : { "Fn::FindInMap": [ "SubnetConfig", "VPC", "ID" ] } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "", [ { "Ref": "ProductTag" }] ] } },
          { "Key" : "Environment", "Value" : {"Ref": "Environment" } },
          { "Key" : "Owner", "Value": { "Ref": "OwnerTag" } },
          { "Key" : "BillingID", "Value": { "Ref": "BillingID" } },
          { "Key" : "Product", "Value": { "Ref": "ProductTag" } }
        ],
         "UserData": {
      "Fn::Base64": {"Fn::Join": ["\n",["#!/bin/bash",{"Fn::Join": ["=",["ACCESS_KEY",{"Ref": "WebServiceUserKey"}]]},
                {"Fn::Join": ["=",["SECRET_KEY",{"Fn::GetAtt": ["WebServiceUserKey","SecretAccessKey"]}]]},
                {"Fn::Join": ["=",["ENV",{ "Ref": "Environment"} ] ]},
                "yum -y install puppet",
                "yum-config-manager --enable epel",
                "yum -y install binutils compat-libstdc++ elfutils-libelf elfutils-libelf-devel",
                "yum -y install glibc glibc-common glibc-devel  gcc  gcc-c++ libaio-devel libaio libgcc",
                "yum -y install libstdc++ libstdc++-devel make sysstat unixODBC unixODBC-devel",
                "mkdir -p /var/els/tmp",
                "groupadd -g 501 dba",
				"useradd -u 500 -g 501 -d /home/oracle -s /bin/bash oracle",
				"mkdir -p /opt/oracle",
                "# temp comment out to make ec2-user sqlplus: chown oracle:dba /opt/oracle",
                "chmod 755 /opt/oracle",
				 "echo ec2-user>>/etc/cron.allow",
                "cat >/var/els/tmp/.s3cfg<<EOF",
                "access_key = $ACCESS_KEY",
                "secret_key = $SECRET_KEY",
                "use_https = True",
                "EOF",
                "/usr/bin/s3cmd -c /var/els/tmp/.s3cfg get s3://els-day-ops/installs/lin64-11.2.0.3.tar.gz /opt/oracle",
						"cd /opt/oracle; tar xzvf lin64-11.2.0.3.tar.gz; rm -f /opt/oracle/lin64-11.2.0.3.tar.gz",
						"sudo su",
						"cd /home/oracle",
				
				"# set oracle access for Ec2-user",
				
				"cat >> /home/ec2-user/.bash_profile << EOF",
                                "#.bash_profile",
                                "#Get the aliases and functions",
                                "if [ -f ~/.bashrc ];then",
                                ". ~/.bashrc",
                                "fi",
                                "#User specific environment and startup programs",
                                "ORACLE_SID=eid",
                                "export ORACLE_HOME=/opt/oracle/lin64-11.2.0.3",
                                "export TNS_ADMIN=/opt/oracle/lin64-11.2.0.3/network/admin",
                                "#PATH=$PATH:$HOME/bin",
                                "PATH=$PATH:$HOME/bin:/opt/oracle/lin64-11.2.0.3/bin",
                                "export PATH",
                                "#umask 0007",
                                "export EDITOR=vim",
                                "EOF",
                                "cat >> /home/ec2-user/.bashrc << EOF",
                                "#.bashrc",
                                "#Source global definitions",
                                "if [ -f /etc/bashrc ]",
				"then",
                                ". /etc/bashrc",
                                "fi",
                                "#User specific aliases and functions",
                                "#umask 077",
                                "umask 022",
                                "ORACLE_SID=eid",
                                "export ORACLE_HOME=/opt/oracle/lin64-11.2.0.3",
                                "export TNS_ADMIN=/opt/oracle/lin64-11.2.0.3/network/admin",
                                "PATH=$PATH:$HOME/bin:/opt/oracle/lin64-11.2.0.3/bin",
                                "export PATH",
                                "EOF",
								

			"# set oracle access for Oracle user",
			"cat >> /home/oracle/.bash_profile << EOF",
                                "#.bash_profile",
                                "#Get the aliases and functions",
                                "if [ -f ~/.bashrc ];then",
                                ". ~/.bashrc",
                                "fi",
                                "#User specific environment and startup programs",
                                "ORACLE_SID=eid",
                                "export ORACLE_HOME=/opt/oracle/lin64-11.2.0.3",
                                "export TNS_ADMIN=/opt/oracle/lin64-11.2.0.3/network/admin",
                                "#PATH=$PATH:$HOME/bin",
                                "PATH=$PATH:$HOME/bin:/opt/oracle/lin64-11.2.0.3/bin",
                                "export PATH",
                                "#umask 0007",
                                "export EDITOR=vim",
                                "EOF",
                                "cat >> /home/oracle/.bashrc << EOF",
                                "#.bashrc",
                                "#Source global definitions",
                                "if [ -f /etc/bashrc ]",
				"then",
                                ". /etc/bashrc",
                                "fi",
                                "#User specific aliases and functions",
                                "#umask 077",
                                "umask 022",
                                "ORACLE_SID=eid",
                                "export ORACLE_HOME=/opt/oracle/lin64-11.2.0.3",
                                "export TNS_ADMIN=/opt/oracle/lin64-11.2.0.3/network/admin",
                                "PATH=$PATH:$HOME/bin:/opt/oracle/lin64-11.2.0.3/bin",
                                "export PATH",
                                "EOF",
                                

                                "/usr/bin/s3cmd -c /var/els/tmp/.s3cfg sync s3://els-day-ops/puppet /var/els",
                                "chown -R ec2-user:ec2-user /var/els",
                                "cat > /opt/oracle/tnsnames.ora <<EOF",
                                "EID=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=eid.cmdvszxph9cf.us-east-1.rds.amazonaws.com)(PORT=1521))(CONNECT_DATA=(SID=eid)))",
								"EIB =(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = eib.cmdvszxph9cf.us-east-1.rds.amazonaws.com)(PORT = 1521)))(CONNECT_DATA =(SID = EIB)))",
								"EIA =(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = eia.cmdvszxph9cf.us-east-1.rds.amazonaws.com)(PORT = 1521)))(CONNECT_DATA =(SID = EIA)))",
                                "EOF",
                                "chown ec2-user:ec2-user /opt/oracle/tnsnames.ora",
                                "chmod 644 /opt/oracle/tnsnames.ora"
								
				
				
              ]
            ]
          }
        }
      }
    },
	
	"WebServiceUser": {
      "Properties": {
        "Groups": [
          "ELS-Standard-IAM-Group-S3Users-1V2Z3CNSFG6UZ"
        ],
        "Path": "/"
      },
      "Type": "AWS::IAM::User"
    },

    "WebServiceUserKey": {
      "Properties": {
        "Serial": 1,
        "UserName": { "Ref": "WebServiceUser"  }
      },
      "Type": "AWS::IAM::AccessKey"
    }
	
	
  },
  
  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "DataLoadGateway", "PublicDnsName" ]}]] },
      "Description" : "URL for newly created EC2 Instance"
    },
	 "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "DataLoadGateway" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "DataLoadGateway", "AvailabilityZone" ] }
    },
    "PrivateIP" : {
      "Description" : "Private IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "DataLoadGateway", "PrivateIp" ] }
    },
	
	"PublicIP" : {
      "Description" : "Private IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "DataLoadGateway", "PublicIp" ] }
    },

    "PrivateDNS" : {
      "Description" : "Private DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "DataLoadGateway", "PrivateDnsName" ] }
    },
	
	
	"PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "DataLoadGateway", "PublicDnsName" ] }
    }
	
  }    
}
