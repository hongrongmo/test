<!--
****************************************************************************
PLEASE READ!

This is the main build file for the backoffice project.  It assumes the 
following setup:
  - PC configured with Apache Tomcat 7.0.23, Java JDK 1.6.0_29 and
    Ant 1.6 or higher

****************************************************************************
-->
<project name="backoffice" default="war" basedir=".">
	<property environment="env"/>
	<property name="env.CATALINA_HOME" value="d:\\apache-tomcat-7.0.23"/>

	<!-- Include properties for build -->
	<property file="./${property_include}.properties" />
	<property name="backoffice.war.path" location="./livebuild/backoffice.war"/>

	<path id="catalina-ant-classpath">
		<!-- We need the Catalina jars for Tomcat -->
		<!--  * for other app servers - check the docs -->
		<fileset  dir="${env.CATALINA_HOME}/lib">
			<include name="catalina-ant.jar"/>
			<include name="tomcat-coyote.jar"/>
			<include name="tomcat-util.jar"/>
		</fileset>
		<fileset dir="${env.CATALINA_HOME}/bin">
			<include name="tomcat-juli.jar"/>
		</fileset>
	</path>

	<path id="project.classpath">
		<fileset id="backoffice-jars" dir="./WebContent/WEB-INF/lib" includes="*.jar" />
		<fileset id="appserver-lib-jars" dir="${env.CATALINA_HOME}/lib" includes="*.jar" />
		<fileset id="appserver-bin-jars" dir="${env.CATALINA_HOME}/bin" includes="*.jar" />
	</path>

	<!-- ********************************************************************************** -->
	<!-- Setup or refresh current environment.  -->
	<!-- ********************************************************************************** -->
	<target name="setup" depends="envcheck">
		<fail unless="property_include" message="********** The 'property_include' property MUST be set! ********" />
		<echo message="[backoffice build] Starting setup..."/>
		<antcall target="context"/>
		<antcall target="clean"/>
	</target>

	<!-- ********************************************************************************** -->
	<!-- Show properties for build                                                          -->
	<!-- ********************************************************************************** -->
	<target name="showproperties" depends="envcheck">
		<echo>
			property_include = ${property_include}
			CATALINA_HOME = ${env.CATALINA_HOME}
			JAVA_HOME = ${env.JAVA_HOME}

            access.pool.name = ${access.pool.name}
            access.pool.url = ${access.pool.url}
            access.pool.username = ${access.pool.username}
            access.pool.password = ${access.pool.password}
            access.pool.driver = ${access.pool.driver}

            data.pool.name = ${data.pool.name}
            data.pool.url = ${data.pool.url}
            data.pool.username = ${data.pool.username}
            data.pool.password = ${data.pool.password}
            data.pool.driver = ${data.pool.driver}

            token.pool.name = ${token.pool.name}
            token.pool.url = ${token.pool.url}
            token.pool.username = ${token.pool.username}
            token.pool.password = ${token.pool.password}
            token.pool.driver = ${token.pool.driver}

            xmlfeed.pool.name = ${xmlfeed.pool.name}
            xmlfeed.pool.url = ${xmlfeed.pool.url}
            xmlfeed.pool.username = ${xmlfeed.pool.username}
            xmlfeed.pool.password = ${xmlfeed.pool.password}
            xmlfeed.pool.driver = ${xmlfeed.pool.driver}

		</echo>
	</target>

	<!-- ********************************************************************************** -->
	<!-- Check environment settings                                                         -->
	<!-- ********************************************************************************** -->
	<target name="envcheck">
		<property file="../${property_include}.properties" />
		<echo message="[backoffice build] Checking environment settings..."/>
		<condition property="backoffice.env.check">
			<and>
				<isset property="property_include"/>
				<isset property="env.CATALINA_HOME"/>
				<isset property="env.JAVA_HOME"/>
			</and>
		</condition>
		<fail unless="backoffice.env.check" message="Unable to do setup - please check environment"/>

		<condition property="backoffice.context.check">
			<available file="./WebContent/META-INF/context.xml"/>
		</condition>

		<condition property="backoffice.context.build.check">
			<and>
            <isset property="access.pool.name"/>
            <isset property="access.pool.url"/>
            <isset property="access.pool.username"/>
            <isset property="access.pool.password"/>
            <isset property="access.pool.driver"/>

            <isset property="data.pool.name"/>
            <isset property="data.pool.url"/>
            <isset property="data.pool.username"/>
            <isset property="data.pool.password"/>
            <isset property="data.pool.driver"/>

            <isset property="token.pool.name"/>
            <isset property="token.pool.url"/>
            <isset property="token.pool.username"/>
            <isset property="token.pool.password"/>
            <isset property="token.pool.driver"/>

            <isset property="xmlfeed.pool.name"/>
            <isset property="xmlfeed.pool.url"/>
            <isset property="xmlfeed.pool.username"/>
            <isset property="xmlfeed.pool.password"/>
            <isset property="xmlfeed.pool.driver"/>

			</and>
		</condition>
	</target>

	<!-- ********************************************************************************** -->
	<!-- Compile source files                                                               -->
	<!-- ********************************************************************************** -->
	<target name="compile" depends="envcheck, context">
		<echo message="[backoffice build] Compiling source..."/>
		<fail unless="backoffice.env.check"/>
		
		<!-- Create build folder if it doesn't exist -->
		<delete dir="./livebuild" />
		<mkdir dir="./livebuild"/>
		<mkdir dir="./livebuild/classes"/>

		<javac fork="true" 
			   sourcepath="" 
			   srcdir="./src" 
			   destdir="./livebuild/classes" 
			   debug="${compile.debug}" 
			   deprecation="${compile.deprecation}" 
			   optimize="${compile.optimize}" 
			   memoryinitialsize="256m" 
			   memorymaximumsize="512m" 
			   classpathref="project.classpath"
			   includeantruntime="false"/>

		<!-- Copy application resources -->
		<copy todir="./livebuild/classes">
			<fileset dir="./src" excludes="**/*.java" />
			<fileset dir="./resources" excludes="**/*.java" />
			<fileset dir="./resources"/>
		</copy>
	</target>

	<!-- *************************************************************** -->
	<!-- Build the context.xml file (JDBC connections) -->
	<!-- *************************************************************** -->
	<target name="context" depends="showproperties,envcheck">
		<echo message="[backoffice build] Running context check..."/>
		<fail unless="backoffice.context.build.check"/>

        <filter token="access-jdbc.url" value="${access.pool.url}" />
        <filter token="access-jdbc.username" value="${access.pool.username}" />
        <filter token="access-jdbc.password" value="${access.pool.password}" />
        <filter token="access-jdbc.driver" value="${access.pool.driver}" />

        <filter token="data-jdbc.url" value="${data.pool.url}" />
        <filter token="data-jdbc.username" value="${data.pool.username}" />
        <filter token="data-jdbc.password" value="${data.pool.password}" />
        <filter token="data-jdbc.driver" value="${data.pool.driver}" />

        <filter token="token-jdbc.url" value="${token.pool.url}" />
        <filter token="token-jdbc.username" value="${token.pool.username}" />
        <filter token="token-jdbc.password" value="${token.pool.password}" />
        <filter token="token-jdbc.driver" value="${token.pool.driver}" />

        <filter token="xmlfeed-jdbc.url" value="${xmlfeed.pool.url}" />
        <filter token="xmlfeed-jdbc.username" value="${xmlfeed.pool.username}" />
        <filter token="xmlfeed-jdbc.password" value="${xmlfeed.pool.password}" />
        <filter token="xmlfeed-jdbc.driver" value="${xmlfeed.pool.driver}" />


		<copy file="./context-backoffice.xml" tofile="./WebContent/META-INF/context.xml" filtering="true" overwrite="true" />


	</target>

	<!-- *************************************************************** -->
	<!-- Create war file -->
	<!-- *************************************************************** -->
	<target name="war" depends="compile">
		<echo message="[backoffice build] Make backoffice.war..."/>

		<war 
			destfile="${backoffice.war.path}" 
			webxml="./WebContent/WEB-INF/web.xml">
			<fileset dir="./WebContent">
			</fileset>
			<lib dir="./WebContent/WEB-INF/lib">
			</lib>
			<classes dir="./livebuild/classes" erroronmissingdir="false">
			</classes>
		</war>

	</target>


	<!-- *************************************************************** -->
	<!-- Clean environment  -->
	<!-- *************************************************************** -->
	<target name="clean">
		<echo>[backoffice build] Cleaning up... </echo>
		<delete dir="./livebuild" failonerror="false"/>
	</target>

</project>


<!-- ******  Script to generate the source from WSDL (do not delete) ****** -->
<!-- C:\Java\jdk1.6.0_29\bin>wsimport http://be-cdc315a/PCSASSvc/CSApplicationService
_V10/WEB-INF/wsdl/v11/service_v11.wsdl -keep -s C:\eng_village\new_location\ANE_
Services\src -->
<!-- ******  Show properties ****** -->
