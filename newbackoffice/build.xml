
<project name="backoffice" basedir="../" default="project">

    <!-- read in users environment variables and prefix with "env." -->
    <property environment="env"/>

    <!-- set default build target environment for reading in filters file, i.e. dev.properties -->
    <property name="env.CATALINA_HOME" value="C:\\apache-tomcat-7.0.29"/>
    <property name="target.environment" value="dev"/>


	  <!-- default value for filter - will be overridden IF define in .properties file -->
	<!-- <filter token="css.body.properties" value="background-color: white;"/> -->
	<!-- <filter filtersfile="src/${target.environment}.properties"/> -->

    <!-- Local system paths -->
<!--
    <property name="jdbc20ext.jar" value="/javasoft/lib/jdbc2_0-stdext.jar"/>
    <property name="servlet.jar" value="/javasoft/lib/servlet.jar"/>
-->
    <!-- Project settings -->
    <property name="project.name" value="backoffice"/>
    <property name="project.version" value="0"/>

    <fileset id="struts-jars" dir="${basedir}/lib/">
        <include name="**/*.jar"/>
    </fileset>

    <fileset id="appserver-jars" dir="${env.CATALINA_HOME}/lib">
        <include name="**/*.jar"/>
    </fileset>

    <fileset id="common-jars" dir="${basedir}/lib/common">
      <include name="**/*.jar"/>
    </fileset>

    <fileset id="css-templates" dir="./src/etc">
        <include name="**/*.in"/>
    </fileset>

    <path id="project.classpath">
        <fileset refid="struts-jars" />
        <fileset refid="appserver-jars" />
	<fileset refid="common-jars" />
        <pathelement location="./classes/" />
    </path>


    <target name="tomcat_check" unless="env.CATALINA_HOME">
        <echo message="FAILURE!! YOU MUST SET CATALINA_HOME ENVIRONMENT VARIABLE to the location of your tomcat install!"/>
        <echo message="FAILURE!! i.e. set CATALINA_HOME=C:\\apache-tomcat-7.0.29 !"/>
    </target>

    <!-- Check timestamp on files -->
    <target name="prepare">
        <tstamp/>
    </target>


   <!-- Copy any resource or configuration files -->
    <target name="resources">
        <copy todir="classes" includeEmptyDirs="no">
            <fileset dir="./src/resources">
            <patternset>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </patternset>
            </fileset>
        </copy>
    </target>


    <!-- Normal build of application -->
    <target name="compile" depends="prepare,resources" >
        <!-- Remove "jikes" value if you must use javac instead -->
        <javac srcdir="src/java" destdir="classes" debug="on" deprecation="on">
            <classpath refid="project.classpath"/>
        </javac>
    </target>


    <!-- Remove classes directory for clean build -->
    <target name="clean" description="Prepare for clean build">
        <delete dir="classes"/>
        <mkdir  dir="classes"/>

        <delete dir="dist"/>

    </target>

    <target name="cleanWebApp">

        <property name="deploy.dir" value="${env.CATALINA_HOME}/webapps/"/>
        <echo message="Cleaning ${deploy.dir}/${project.name}"/>

        <delete file="${deploy.dir}/${project.name}.xml" />
        <delete file="${deploy.dir}/${project.name}.war" />
        <delete file="${deploy.dir}/${project.name}.xml" />
        <delete dir="${env.CATALINA_HOME}/work/Standalone/localhost/${project.name}" includeEmptyDirs="true" />
        <delete dir="${deploy.dir}/${project.name}" includeEmptyDirs="true" />
    </target>


  <!-- Build binary distribution -->
    <target name="dist" depends="compile" description="Create binary distribution to WEB-INF/dist directory">

      <echo message="Building for ${target.environment} environment"/>

      <delete dir="dist"/>
      <mkdir  dir="dist"/>

      <copy filtering="yes" overwrite="yes" todir="../css/">
        <fileset refid="css-templates"/>
        <mapper type="glob" from="*.css.in" to="*.css"/>
      </copy>
      
      <ant dir="src" target="deploy"/>
	  <jar jarfile="**/WEB-INF/list/backoffice.war" basedir="src" excludes="**/backoffice.war"/>

     <!--
      <war destfile="dist/${project.name}.war" webxml="src/etc/web.xml">
          <fileset dir="../">
            <exclude name="**/WEB-INF/**"/>
            <exclude name="**/.project"/>
            <exclude name="**/.classpath"/>
          </fileset>
          <webinf dir=".">
              <exclude name="**/dist/**"/>
              <exclude name="**/lib/**"/>
              <exclude name="**/src/**"/>
              <exclude name="**/classes/**"/>
          </webinf>
          <classes dir="classes"/>
          <lib dir="lib">
              <exclude name="**/common/**"/>
          </lib>
        </war>
	-->
	
        <copy filtering="yes" file="src/etc/${project.name}.xml"  todir="dist" />

    </target>

    <!-- Build entire project -->
    <target name="project" depends="clean,prepare,compile">
    </target>

    <target name="load" depends="compile" >
        <java classname="org.ei.struts.backoffice.LoadOptions" fork="yes">
            <classpath refid="project.classpath"/>
            <arg value="jdbc:oracle:thin:NEW_OFFICE/devel@ELSHOBS48865.ei.org:1521:pbr92"/>
            <jvmarg value="-Djdbc.drivers=oracle.jdbc.driver.OracleDriver"/>
        </java>
    </target>

    <target name="deploy" description="Deploy binary distribution to %CATALINA_HOME%\webapps" depends="tomcat_check">

        <delete dir="${env.CATALINA_HOME}/webapps/${project.name}"/>
        <unwar src="dist/${project.name}.war" dest="${env.CATALINA_HOME}/webapps/${project.name}"/>
<!--        <copy overwrite="yes" file="dist/${project.name}.war" todir="${env.CATALINA_HOME}/webapps"/> -->
        <copy overwrite="yes" file="dist/${project.name}.xml" todir="${env.CATALINA_HOME}/webapps"/>
    </target>

    <!-- Utlity TargetS for deployoing/publishing during development -->

    <fileset id="jspfiles" dir="${basedir}/..">
        <include name="**/*.jsp"/>
    </fileset>

    <fileset id="classfiles" dir="./classes">
        <include name="**/*.class"/>
        <include name="**/*.conf"/>
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
    </fileset>

    <!-- Utlity Target for deployoing/publishing during development -->
    <target name="jsps" description="Use Only during development to republish/deploy JSP files only">
        <copy filtering="no" overwrite="yes" todir="${env.CATALINA_HOME}/webapps/${project.name}/">
            <fileset refid="jspfiles"/>
        </copy>
    </target>

    <!-- Utlity Target for deployoing/publishing during development -->
    <target name="classes" description="Use Only during development to republish/deploy report definition files only">
        <copy filtering="no" todir="${env.CATALINA_HOME}/webapps/${project.name}/WEB-INF/classes">
            <fileset refid="classfiles"/>
        </copy>
    </target>

	<target name="ver">

  	<tstamp>
			<format property="Now" pattern="MM/dd/yyyy hh:mm:ss a" locale="en"/>
  	</tstamp>

		<echo message="Now: ${Now}"/>
		<echo message=""/>
		<echo message="Ant Version ${ant.version}"/>
		<echo message="OS ${os.name} Version ${os.version}"/>
		<echo message="User ${user.name}"/>
		<echo message="User Home ${user.home}"/>
		<echo message="Java VM ${java.vendor} Version ${java.vm.version}"/>
		<echo message="Java Home ${java.home}"/>
		<echo message=""/>
		<echo message="Project: ${ant.project.name}"/>
		<echo message="Base Directory: ${basedir}"/>
		<echo message="Buildfile: ${ant.file}"/>

	</target>

    <!-- <available file="U:\My Documents\identity.ppk" property="identity.present"/> -->

    <target name="keypub-remote" description="" if="identity.present">
      <echo message="Using RSA Key"/>
      <property name="pscp.auth" value="-i 'U:\My Documents\identity.ppk'"/>
    </target>

    <target name="passpub-remote" description="" unless="identity.present">
      <echo message="Using Username/Password"/>
      <input message="Please enter emetrics password:" addproperty="pwd"/>
      <property name="pscp.auth" value="-pw ${pwd}"/>
    </target>


    <target name="pub-remote" description="" depends="keypub-remote,passpub-remote">
      <property file="./src/${target.environment}.properties"/>

      <echo message="Deploying to ${target.environment} environment-> ${deploy.url}"/>

      <exec executable="pscp.exe" os="Windows XP">
        <arg line="-q -2 ${pscp.auth} dist/${project.name}.* ${deploy.url}"/>
      </exec>
    </target>

</project>
