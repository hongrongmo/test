package org.ei.data.encompasspat.stn;
/*
 * Created on Apr 16, 2004
 *
 * To change the template for this generated file go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */

/**
 * @author Tsolovye
 *
 * To change the template for this generated type comment go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */

import java.util.*;

/**
 * @author Tsolovye
 *
 * To change the template for this generated type comment go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */
public class ALitStat {

	public Hashtable record = new Hashtable();
	public ArrayList tagOrder = new ArrayList();
	public static Hashtable htCountry = new Hashtable();
	public static Hashtable htLang = new Hashtable();
	public static Hashtable htReplTags = new Hashtable();
	public static Hashtable htdelim = new Hashtable();
	public static Hashtable htconcat = new Hashtable();
	public static Hashtable htdollardelim = new Hashtable();

	static {
		htReplTags.put("\\&ang;", " angle ");
		htReplTags.put("\\&ap;", " approximately equals ");
		htReplTags.put("\\&gsim;", " approximately greater than ");
		htReplTags.put("\\&lsim;", " approximately less than ");
		htReplTags.put("\\&darr;", " [Arrow Down] ");
		htReplTags.put("\\&harr;", "&lt;-&gt;");

		htReplTags.put("\\&uarr;", " [Arrow Up] ");
		htReplTags.put("\\&bull;", " [Closed Circle] ");
		htReplTags.put("\\&conint;", " contour integral ");
		htReplTags.put("\\&sup;", " contains ");
		htReplTags.put("\\&cir;", " [Circle Open] ");
		htReplTags.put("\\&dagger;", "\\&#134;");
		htReplTags.put("\\&Dagger;", "\\&#135;");
		htReplTags.put("\\&dtri;", " Del ");
		htReplTags.put("\\&dollar;", "$");
		htReplTags.put("\\&diams;", " [Diamond Solid] ");
		htReplTags.put("\\&ne;", " does not equal ");
		htReplTags.put("\\&otimes;", " direct product ");
		htReplTags.put("\\&Prime;", " double prime ");
		htReplTags.put("\\&oplus;", " direct sum ");
		htReplTags.put("\\&ell;", " l-script ");
		htReplTags.put("\\&equiv;", " equivalent ");
		htReplTags.put("\\&ge;", " greater than or equal ");
		htReplTags.put("\\&plankv;", " Plank constant\\/2\\&pi;");
		htReplTags.put("\\&sub;", " is contained in ");
		htReplTags.put("\\&isin;", " is a member of the set of ");
		htReplTags.put("\\&larr;", "\\&lt;-");
		htReplTags.put("\\&infin;", " infinity ");
		htReplTags.put("\\&int;", " integral ");
		htReplTags.put("\\&lang;", " [Left Angle Bracket] ");
		htReplTags.put("\\&lt;", " less than or equal ");
		htReplTags.put("\\&mnplus;", " minus or plus ");
		htReplTags.put("\\&macr;", " over-bar ");
		htReplTags.put("\\&par;", " parallel ");
		htReplTags.put("\\&prod;", " product ");
		htReplTags.put("\\&prime;", " prime ");
		htReplTags.put("\\&perp;", " perpendicular ");
		htReplTags.put("\\&part;", " partial ");
		htReplTags.put("\\&iff;", " reversible reaction ");
		htReplTags.put("\\&radic;", " root ");
		htReplTags.put("\\&rang;", " [Right Angle Bracket] ");
		htReplTags.put("\\&squ;", " [Square Open] ");
		htReplTags.put("\\&squf;", " [Square Solid] ");
		htReplTags.put("\\&sum;", " summation ");
		htReplTags.put("\\&utrif;", " [Triangle Solid] ");
		htReplTags.put("\\&exist;", " there exists ");
		htReplTags.put("\\&utri;", " [Triangle Open] ");
		htReplTags.put("\\&tprime;", " triple prime ");
		htReplTags.put("\\&prop;", " varies directly as ");
		htReplTags.put("\\&Gt;", " very much greater than ");
		htReplTags.put("\\&Lt;", " very much less than ");
		htReplTags.put("\\&rarr;", "-\\&gt;");
		htReplTags.put("<inf>", "<sub>");
		htReplTags.put("<\\/inf>", "<\\/sub>");
		htReplTags.put("<br\\/>", " ");
		htReplTags.put("\\&sigmav;", "\\&sigma;");
		htReplTags.put("\\&Epsi;", "\\&Epsilon;");
		htReplTags.put("\\&epsi;", "\\&epsilon;");
		htReplTags.put("\\&Upsi;", "\\&Upsilon;");
		htReplTags.put("\\&upsi;", "\\&upsilon;");
		htReplTags.put("\\&nabla;", " Del ");
		htReplTags.put("\\&AElig;", "AE");
		htReplTags.put("\\&Jfr;", "[J-fraktur]");
		htReplTags.put("\\&Lstrok;", "L");
		htReplTags.put("\\&OElig;", "OE");
		htReplTags.put("\\&Oslash;", "O");
		htReplTags.put("\\&Rfr;", "[R-fraktur]");
		htReplTags.put("\\&acute;", "");
		htReplTags.put("\\&aelig;", "ae");
		htReplTags.put("\\&aleph;", " [aleph] ");
		htReplTags.put("\\&amp;", " and ");
		htReplTags.put("\\&and;", " [logical AND] ");
		htReplTags.put("\\&ape;", " [almost equal or equal to] ");
		htReplTags.put("\\&becaus;", " [because] ");
		htReplTags.put("\\&cap;", " [intersection] ");
		htReplTags.put("\\&caron;", "");
		htReplTags.put("\\&cedil;", "");
		htReplTags.put("\\&circ;", "");
		htReplTags.put("\\&cong;", " [approximately equal to] ");
		htReplTags.put("\\&coprod;", " [coproduct] ");
		htReplTags.put("\\&cup;", " [union] ");
		htReplTags.put("\\&dashv;", " [reverse turnstile] ");
		htReplTags.put("\\&diam;", " [Diamond] ");
		htReplTags.put("\\&dot;", "");
		htReplTags.put("\\&die;", "");
		htReplTags.put("\\\\&dtrif;", " [black down triangle] ");
		htReplTags.put("\\&efDot;", " [approximately equal to or image of] ");
		htReplTags.put("\\&emptyv;", " [empty set] ");
		htReplTags.put("\\&erDot;", " [image of or approximately equal to] ");
		htReplTags.put("\\&euro;", " [euro] ");
		htReplTags.put("\\&female;", " [female] ");
		htReplTags.put("\\&forall;", " [for all] ");
		htReplTags.put("\\&grave;", "");
		htReplTags.put("\\&iexcl;", "");
		htReplTags.put("\\&iquest;", "");
		htReplTags.put("\\&lArr;", " [left double arrow] ");
		htReplTags.put("\\&laquo;", "<<");
		htReplTags.put("\\&le;", " [less-than or equal to] ");
		htReplTags.put("\\&lrarr2;", " [left arrow over right arrow] ");
		htReplTags.put("\\&lrhar2;", " [left harpoon over right harpoon]");
		htReplTags.put("\\&lstrok;", "l");
		htReplTags.put("\\&ltri;", " [left triangle] ");
		htReplTags.put("\\&ltrif;", " [black left triangle] ");
		htReplTags.put("\\&male;", " [male] ");
		htReplTags.put("\\&nap;", " [not almost equal to] ");
		htReplTags.put("\\&nbsp;", " ");
		htReplTags.put(
			"\\&ncong;",
			" [neither approximately nor actually equal to] ");
		htReplTags.put("\\&nearr;", " [north east arrow] ");
		htReplTags.put("\\&nequiv;", " [not identical to] ");
		htReplTags.put("\\&nexist;", " [there does not exist] ");
		htReplTags.put("\\&nge;", " [neither greater-than nor equal to] ");
		htReplTags.put("\\&ngt;", " [not greater-than] ");
		htReplTags.put("\\&ni;", " [contains as member] ");
		htReplTags.put("\\&nle;", " [neither less-than nor equal to] ");
		htReplTags.put("\\&nlt;", " [not less-than] ");
		htReplTags.put("\\&notin;", " [not an element of] ");
		htReplTags.put("\\&notni;", " [does not contain as member] ");
		htReplTags.put("\\&npar;", " [not parallel to] ");
		htReplTags.put("\\&nsim;", " [not similar to] ");
		htReplTags.put("\\&nsime;", " [not asymptotically equal to] ");
		htReplTags.put("\\&nsub;", " [not a subset of] ");
		htReplTags.put("\\&nsube;", " [neither a subset of nor equal to]");
		htReplTags.put("\\&nsup;", " [not a superset of] ");
		htReplTags.put("\\&nsupe;", " [neither a superset of nor equal to] ");
		htReplTags.put("\\&nwarr;", " [north west arrow] ");
		htReplTags.put("\\&odot;", " [dot in circle] ");
		htReplTags.put("\\&oelig;", "oe");
		htReplTags.put("\\&ominus;", " [circled minus] ");
		htReplTags.put("\\&or;", " [logical OR] ");
		htReplTags.put("\\&oslash;", "o");
		htReplTags.put("\\&permil;", " [per mille] ");
		//	htReplTags.put("\\&quot;", "\\X22");
		htReplTags.put("\\&rArr;", " [right double arrow] ");
		htReplTags.put("\\&raquo;", ">>");
		htReplTags.put("\\&reg;", " [registered trademark] ");
		htReplTags.put("\\&ring;", "");
		htReplTags.put("\\&rlarr2;", " [right arrow over left arrow] ");
		htReplTags.put("\\&rlhar2;", " [right harpoon over left harpoon] ");
		htReplTags.put("\\&rtri;", " [right triangle] ");
		htReplTags.put("\\&rtrif;", " [black right triangle] ");
		htReplTags.put("\\&searr;", " [south east arrow] ");
		htReplTags.put("\\&sect;", " [section] ");
		htReplTags.put("\\&sim;", " [similar to] ");
		htReplTags.put("\\&sime;", " [asymptotically equal to] ");
		htReplTags.put("\\&sube;", " [subset of or equal to] ");
		htReplTags.put("\\&supe;", " [superset of or equal to] ");
		htReplTags.put("\\&swarr;", " [south west arrow] ");
		htReplTags.put("\\&szlig;", "ss");
		htReplTags.put("\\&there4;", " [therefore] ");
		htReplTags.put("\\&tild;", "");
		htReplTags.put("\\&top;", " [inverted perpendicular] ");
		htReplTags.put("\\&trade;", " [trademark] ");
		htReplTags.put("\\&vdash;", " [turnstile] ");
		htReplTags.put("\\&not;", " [logical not] ");
		htReplTags.put("\\&rharu;", " [right harpoon, up] ");
		htReplTags.put("\\&rhard;", " [right harpoon, down] ");
		htReplTags.put("\\&lharu;", " [left harpoon, up] ");
		htReplTags.put("\\&lhard;", " [left harpoon, down] ");
		htReplTags.put("\\&Rarr;", " [right double-headed arrow] ");
		htReplTags.put("\\&Larr;", " [left double-headed arrow] ");
		htReplTags.put("\\&varr;", " [up-down arrow] ");
		htReplTags.put("\\&lE;", " [less-than over equal to] ");
		htReplTags.put("\\&gE;", " [greater-than over equal to] ");
		htReplTags.put("\\&vellip;", " [vertical ellipsis] ");
		htReplTags.put("\\&mellip;", " [midline ellipsis] ");
		htReplTags.put("\\&Gg;", " [very much greater-than] ");
		htReplTags.put("\\&Ll;", " [very much less-than] ");
		htReplTags.put("\\&pr;", " [precedes] ");
		htReplTags.put("\\&sc;", " [succeeds] ");
		htReplTags.put("\\&wedgeq;", " [estimates] ");
		htReplTags.put("\\&ltrie;", " [normal subgroup of or equal to] ");
		htReplTags.put(
			"\\&rtrie;",
			" [contains as normal subgroup or equal to] ");
		htReplTags.put("\\&lfloor;", " [left floor] ");
		htReplTags.put("\\&rfloor;", " [right floor] ");
		htReplTags.put("\\&lceil;", " [left ceiling] ");
		htReplTags.put("\\&rceil;", " [right ceiling] ");
		htReplTags.put("\\&rtimes;", " [right-closed times] ");
		htReplTags.put("\\&ltimes;", " [left-closed times] ");
		htReplTags.put("\\&mho;", " [mho] ");
		htReplTags.put("\\&Cdbl;", " [double-struck C] ");
		htReplTags.put("\\&Hdbl;", " [double-struck H] ");
		htReplTags.put("\\&Ndbl;", " [double-struck N] ");
		htReplTags.put("\\&Pdbl;", " [double-struck P] ");
		htReplTags.put("\\&Qdbl;", " [double-struck Q] ");
		htReplTags.put("\\&Rdbl;", " [double-struck R] ");
		htReplTags.put("\\&Zdbl;", " [double-struck Z] ");
		htReplTags.put("\\&Bscr;", " [script B] ");
		htReplTags.put("\\&Escr;", " [script E] ");
		htReplTags.put("\\&Fscr;", " [script F] ");
		htReplTags.put("\\&Hscr;", " [script H] ");
		htReplTags.put("\\&Iscr;", " [script I] ");
		htReplTags.put("\\&Lscr;", " [script L] ");
		htReplTags.put("\\&Mscr;", " [script M] ");
		htReplTags.put("\\&Pscr;", " [script P] ");
		htReplTags.put("\\&Rscr;", " [script R] ");

		htCountry.put("ISO", "ES name");
		htCountry.put("AFG", "AFGHANISTAN");
		htCountry.put("ALB", "ALBANIA");
		htCountry.put("DZA", "ALGERIA");
		htCountry.put("ASM", "AMERICAN SAMOA");
		htCountry.put("AND", "ANDORRA");
		htCountry.put("AGO", "ANGOLA");
		htCountry.put("AIA", "ANGUILLA");
		htCountry.put("ATA", "ANTARCTICA");
		htCountry.put("ATG", "ANTIGUA AND BARBUDA");
		htCountry.put("ARG", "ARGENTINA");
		htCountry.put("ARM", "ARMENIA");
		htCountry.put("ABW", "ARUBA");
		htCountry.put("AUS", "AUSTRALIA");
		htCountry.put("AUT", "AUSTRIA");
		htCountry.put("AZE", "AZERBAIJAN");
		htCountry.put("BHS", "BAHAMAS");
		htCountry.put("BHR", "BAHRAIN");
		htCountry.put("BGD", "BANGLADESH");
		htCountry.put("BRB", "BARBADOS");
		htCountry.put("BEL", "BELGIUM");
		htCountry.put("BLZ", "BELIZE");
		htCountry.put("BEN", "BENIN");
		htCountry.put("BMU", "BERMUDA");
		htCountry.put("BTN", "BHUTAN");
		htCountry.put("BOL", "BOLIVIA");
		htCountry.put("BIH", "BOSNIA & HERCEGOVINA");
		htCountry.put("BWA", "BOTSWANA");
		htCountry.put("BVT", "BOUVET ISLAND");
		htCountry.put("BRA", "BRAZIL");
		htCountry.put("IOT", "BRITISH INDIAN OCEAN TERRITORY");
		htCountry.put("VGB", "BRITISH VIRGIN ISLANDS");
		htCountry.put("BRN", "BRUNEI");
		htCountry.put("BGR", "BULGARIA");
		htCountry.put("BFA", "BURKINA FASO");
		htCountry.put("BDI", "BURUNDI");
		htCountry.put("BLR", "BYELORUSSIA");
		htCountry.put("KHM", "CAMBODIA");
		htCountry.put("CMR", "CAMEROON");
		htCountry.put("CAN", "CANADA");
		htCountry.put("CPV", "CAPE VERDE");
		htCountry.put("CYM", "CAYMAN ISLANDS");
		htCountry.put("CAF", "CENTRAL AFRICAN REPUBLIC");
		htCountry.put("TCD", "CHAD");
		htCountry.put("CHL", "CHILE");
		htCountry.put("CHN", "CHINA");
		htCountry.put("CXR", "CHRISTMAS ISLAND");
		htCountry.put("CCK", "COCOS (KEELING) ISLANDS");
		htCountry.put("COL", "COLOMBIA");
		htCountry.put("COM", "COMOROS");
		htCountry.put("COG", "CONGO");
		htCountry.put("COK", "COOK ISLANDS");
		htCountry.put("CRI", "COSTA RICA");
		htCountry.put("HRV", "CROATIA");
		htCountry.put("CUB", "CUBA");
		htCountry.put("CYP", "CYPRUS");
		htCountry.put("CZE", "CZECH REPUBLIC");
		htCountry.put("COD", "DEMOCRATIC REPUBLIC CONGO");
		htCountry.put("DNK", "DENMARK");
		htCountry.put("DJI", "DJIBOUTI");
		htCountry.put("DMA", "DOMINICA");
		htCountry.put("DOM", "DOMINICAN REPUBLIC");
		htCountry.put("TMP", "EAST TIMOR");
		htCountry.put("ECU", "ECUADOR");
		htCountry.put("EGY", "EGYPT");
		htCountry.put("SLV", "EL SALVADOR");
		htCountry.put("GNQ", "EQUATORIAL GUINEA");
		htCountry.put("ERI", "ERITREA");
		htCountry.put("EST", "ESTONIA");
		htCountry.put("ETH", "ETHIOPIA");
		htCountry.put("FSM", "FEDERATED STATES OF MICRONESIA");
		htCountry.put("FJI", "FIJI");
		htCountry.put("FIN", "FINLAND");
		htCountry.put("FRA", "FRANCE");
		htCountry.put("GUF", "FRENCH GUIANA");
		htCountry.put("PYF", "FRENCH POLYNESIA");
		htCountry.put("ATF", "FRENCH SOUTHERN TERRITORIES");
		htCountry.put("GAB", "GABON");
		htCountry.put("GMB", "GAMBIA");
		htCountry.put("GEO", "GEORGIA");
		htCountry.put("DEU", "GERMANY");
		htCountry.put("GHA", "GHANA");
		htCountry.put("GIB", "GIBRALTAR");
		htCountry.put("GRC", "GREECE");
		htCountry.put("GRL", "GREENLAND");
		htCountry.put("GRD", "GRENADA");
		htCountry.put("GLP", "GUADELOUPE");
		htCountry.put("GUM", "GUAM");
		htCountry.put("GTM", "GUATEMALA");
		htCountry.put("GIN", "GUINEA");
		htCountry.put("GNB", "GUINEA-BISSAU");
		htCountry.put("GUY", "GUYANA");
		htCountry.put("HTI", "HAITI");
		htCountry.put("HMD", "HEARD AND MC DONALD ISLANDS");
		htCountry.put("HND", "HONDURAS");
		htCountry.put("HKG", "HONG KONG");
		htCountry.put("HUN", "HUNGARY");
		htCountry.put("ISL", "ICELAND");
		htCountry.put("IND", "INDIA");
		htCountry.put("IDN", "INDONESIA");
		htCountry.put("IRN", "IRAN");
		htCountry.put("IRQ", "IRAQ");
		htCountry.put("IRL", "IRELAND");
		htCountry.put("ISR", "ISRAEL");
		htCountry.put("ITA", "ITALY");
		htCountry.put("CIV", "IVORY COAST");
		htCountry.put("JAM", "JAMAICA");
		htCountry.put("JPN", "JAPAN");
		htCountry.put("JOR", "JORDAN");
		htCountry.put("KAZ", "KAZAKHSTAN");
		htCountry.put("KEN", "KENYA");
		htCountry.put("KGZ", "KIRGIZIYA");
		htCountry.put("KIR", "KIRIBATI");
		htCountry.put("KWT", "KUWAIT");
		htCountry.put("LAO", "LAOS");
		htCountry.put("LVA", "LATVIA");
		htCountry.put("LBN", "LEBANON");
		htCountry.put("LSO", "LESOTHO");
		htCountry.put("LBR", "LIBERIA");
		htCountry.put("LBY", "LIBYAN ARAB JAMAHIRIYA");
		htCountry.put("LIE", "LIECHTENSTEIN");
		htCountry.put("LTU", "LITHUANIA");
		htCountry.put("LUX", "LUXEMBOURG");
		htCountry.put("MAC", "MACAU");
		htCountry.put("MKD", "MACEDONIA");
		htCountry.put("MDG", "MADAGASCAR");
		htCountry.put("MWI", "MALAWI");
		htCountry.put("MYS", "MALAYSIA");
		htCountry.put("MDV", "MALDIVES");
		htCountry.put("MLI", "MALI");
		htCountry.put("MLT", "MALTA");
		htCountry.put("FLK", "MALVINAS");
		htCountry.put("MHL", "MARSHALL ISLANDS");
		htCountry.put("MTQ", "MARTINIQUE");
		htCountry.put("MRT", "MAURITANIA");
		htCountry.put("MUS", "MAURITIUS");
		htCountry.put("MEX", "MEXICO");
		htCountry.put("MDA", "MOLDAVIA");
		htCountry.put("MCO", "MONACO");
		htCountry.put("MNG", "MONGOLIA");
		htCountry.put("MSR", "MONTSERRAT");
		htCountry.put("MAR", "MOROCCO");
		htCountry.put("MOZ", "MOZAMBIQUE");
		htCountry.put("MMR", "MYANMAR");
		htCountry.put("NAM", "NAMIBIA");
		htCountry.put("NRU", "NAURU");
		htCountry.put("NPL", "NEPAL");
		htCountry.put("NLD", "NETHERLANDS");
		htCountry.put("ANT", "NETHERLANDS ANTILLES");
		htCountry.put("NCL", "NEW CALEDONIA");
		htCountry.put("NZL", "NEW ZEALAND");
		htCountry.put("NIC", "NICARAGUA");
		htCountry.put("NER", "NIGER");
		htCountry.put("NGA", "NIGERIA");
		htCountry.put("NIU", "NIUE");
		htCountry.put("NFK", "NORFOLK ISLAND");
		htCountry.put("PRK", "NORTH KOREA");
		htCountry.put("MNP", "NORTHERN MARIANA ISLANDS");
		htCountry.put("NOR", "NORWAY");
		htCountry.put("OMN", "OMAN");
		htCountry.put("PAK", "PAKISTAN");
		htCountry.put("PLW", "PALAU");
		htCountry.put("PAN", "PANAMA");
		htCountry.put("PNG", "PAPUA NEW GUINEA");
		htCountry.put("PRY", "PARAGUAY");
		htCountry.put("PER", "PERU");
		htCountry.put("PHL", "PHILIPPINES");
		htCountry.put("PCN", "PITCAIRN");
		htCountry.put("POL", "POLAND");
		htCountry.put("PRT", "PORTUGAL");
		htCountry.put("PRI", "PUERTO RICO");
		htCountry.put("QAT", "QATAR");
		htCountry.put("REU", "REUNION");
		htCountry.put("ROM", "ROMANIA");
		htCountry.put("RUS", "RUSSIA");
		htCountry.put("RWA", "RWANDA");
		htCountry.put("KNA", "SAINT KITTS AND NEVIS");
		htCountry.put("LCA", "SAINT LUCIA");
		htCountry.put("WSM", "SAMOA");
		htCountry.put("SMR", "SAN MARINO");
		htCountry.put("STP", "SAO TOME AND PRINCIPE");
		htCountry.put("SAU", "SAUDI ARABIA");
		htCountry.put("SEN", "SENEGAL");
		htCountry.put("SYC", "SEYCHELLES");
		htCountry.put("SLE", "SIERRA LEONE");
		htCountry.put("SGP", "SINGAPORE");
		htCountry.put("SVK", "SLOVAK REPUBLIC");
		htCountry.put("SVN", "SLOVENIA");
		htCountry.put("SLB", "SOLOMON ISLANDS");
		htCountry.put("SOM", "SOMALIA");
		htCountry.put("ZAF", "SOUTH AFRICA");
		htCountry.put("KOR", "SOUTH KOREA");
		htCountry.put("ESP", "SPAIN");
		htCountry.put("LKA", "SRI LANKA");
		htCountry.put("SHN", "ST. HELENA");
		htCountry.put("SPM", "ST. PIERRE AND MIQUELON");
		htCountry.put("VCT", "ST. VINCENT AND THE GRENADINES");
		htCountry.put("SDN", "SUDAN");
		htCountry.put("SUR", "SURINAME");
		htCountry.put("SWZ", "SWAZILAND");
		htCountry.put("SWE", "SWEDEN");
		htCountry.put("CHE", "SWITZERLAND");
		htCountry.put("SYR", "SYRIA");
		htCountry.put("TJK", "TADZHIKISTAN");
		htCountry.put("TWN", "TAIWAN");
		htCountry.put("TZA", "TANZANIA");
		htCountry.put("THA", "THAILAND");
		htCountry.put("TGO", "TOGO");
		htCountry.put("TKL", "TOKELAU");
		htCountry.put("TON", "TONGA");
		htCountry.put("TTO", "TRINIDAD AND TOBAGO");
		htCountry.put("TUN", "TUNISIA");
		htCountry.put("TUR", "TURKEY");
		htCountry.put("TKM", "TURKMENISTAN");
		htCountry.put("TCA", "TURKS AND CAICOS ISLANDS");
		htCountry.put("TUV", "TUVALU");
		htCountry.put("UGA", "UGANDA");
		htCountry.put("GBR", "UK");
		htCountry.put("UKR", "UKRAINE");
		htCountry.put("ARE", "UNITED ARAB EMIRATES");
		htCountry.put("URY", "URUGUAY");
		htCountry.put("UMI", "US MINOR OUTLYING ISLANDS");
		htCountry.put("VIR", "US VIRGIN ISLANDS");
		htCountry.put("USA", "USA");
		htCountry.put("ZZA", "USER DEFINED");
		htCountry.put("UZB", "UZBEKISTAN");
		htCountry.put("VUT", "VANUATU");
		htCountry.put("VAT", "VATICAN CITY STATE");
		htCountry.put("VEN", "VENEZUELA");
		htCountry.put("VNM", "VIET NAM");
		htCountry.put("WLF", "WALLIS AND FUTUNA ISLANDS");
		htCountry.put("ESH", "WESTERN SAHARA");
		htCountry.put("YEM", "YEMEN");
		htCountry.put("YUG", "YUGOSLAVIA");
		htCountry.put("ZMB", "ZAMBIA");

		htLang.put("ABKH", "Abkhazian");
		htLang.put("AFAR", "Afar");
		htLang.put("AFRK", "Afrikaans");
		htLang.put("ALBA", "Albanian");
		htLang.put("AMHA", "Amharic");
		htLang.put("ARAB", "Arabic");
		htLang.put("ARME", "Armenian");
		htLang.put("ASSA", "Assamese");
		htLang.put("AVES", "Avestan");
		htLang.put("AYMA", "Aymara");
		htLang.put("AZRB", "Azerbaijani");
		htLang.put("BASH", "Bashkir");
		htLang.put("BASQ", "Basque");
		htLang.put("BYEL", "Belarusian");
		htLang.put("BENG", "Bengali");
		htLang.put("BIHA", "Bihari");
		htLang.put("BISL", "Bislama");
		htLang.put("BOSN", "Bosnian");
		htLang.put("BRET", "Breton");
		htLang.put("BULG", "Bulgarian");
		htLang.put("BURM", "Burmese");
		htLang.put("CATA", "Catalan");
		htLang.put("CHAM", "Chamorro");
		htLang.put("CHEC", "Chechen");
		htLang.put("CHIN", "Chinese");
		htLang.put("CHSL", "Church Slavic");
		htLang.put("CHUV", "Chuvash");
		htLang.put("CORN", "Cornish");
		htLang.put("CORS", "Corsican");
		htLang.put("CROA", "Croatian");
		htLang.put("CZCH", "Czech");
		htLang.put("DANS", "Danish");
		htLang.put("DUTC", "Dutch");
		htLang.put("DZON", "Dzongkha");
		htLang.put("ENGL", "English");
		htLang.put("ESPE", "Esperanto");
		htLang.put("ESTO", "Estonian");
		htLang.put("FARO", "Faroese");
		htLang.put("FIJI", "Fijian");
		htLang.put("FINN", "Finnish");
		htLang.put("FREN", "French");
		htLang.put("FRIS", "Frisian");
		htLang.put("GALL", "Gallegan");
		htLang.put("GEOR", "Georgian");
		htLang.put("GERM", "German");
		htLang.put("GREK", "Greek");
		htLang.put("GUAR", "Guarani");
		htLang.put("GUJA", "Gujarati");
		htLang.put("HAUS", "Hausa");
		htLang.put("HEBR", "Hebrew");
		htLang.put("HERE", "Herero");
		htLang.put("INDI", "Hindi");
		htLang.put("HIRI", "Hiri Motu");
		htLang.put("HUNG", "Hungarian");
		htLang.put("ICEL", "Icelandic");
		htLang.put("BAHA", "Indonesian");
		htLang.put("INUK", "Inuktitut");
		htLang.put("INUP", "Inupiaq");
		htLang.put("GAEL", "Irish Gaelic");
		htLang.put("ITAL", "Italian");
		htLang.put("JAPA", "Japanese");
		htLang.put("JAVA", "Javanese");
		htLang.put("KALA", "Kalaallisut");
		htLang.put("KANN", "Kannada");
		htLang.put("KASH", "Kashmiri");
		htLang.put("KAZA", "Kazakh");
		htLang.put("KHME", "Khmer");
		htLang.put("KIKU", "Kikuyu");
		htLang.put("KINY", "Kinyarwanda");
		htLang.put("KIRG", "Kirghiz");
		htLang.put("KOMI", "Komi");
		htLang.put("KORA", "Korean");
		htLang.put("KUAN", "Kuanyama");
		htLang.put("KURD", "Kurdish");
		htLang.put("LAOX", "Lao");
		htLang.put("LATN", "Latin");
		htLang.put("LATV", "Latvian");
		htLang.put("LETZ", "Letzeburgesch");
		htLang.put("LING", "Lingala");
		htLang.put("LITH", "Lithuanian");
		htLang.put("MACE", "Macedonian");
		htLang.put("MALG", "Malagasy");
		htLang.put("MALA", "Malay");
		htLang.put("MALM", "Malayalam");
		htLang.put("MALT", "Maltese");
		htLang.put("MANX", "Manx");
		htLang.put("MAOR", "Maori");
		htLang.put("MARA", "Marathi");
		htLang.put("MARS", "Marshall");
		htLang.put("MOLD", "Moldavian");
		htLang.put("MONG", "Mongolian");
		htLang.put("NAUR", "Nauru");
		htLang.put("NAVA", "Navajo");
		htLang.put("NDON", "Ndonga");
		htLang.put("NEPA", "Nepali");
		htLang.put("NDEN", "North Ndebele");
		htLang.put("SAMN", "Northern Sami");
		htLang.put("NORW", "Norwegian");
		htLang.put("NORB", "Norwegian Bokmal");
		htLang.put("NORN", "Norwegian Nynorsk");
		htLang.put("NYAN", "Nyanja");
		htLang.put("OCCI", "Occitan");
		htLang.put("ORIY", "Oriya");
		htLang.put("OROM", "Oromo");
		htLang.put("OSSE", "Ossetic");
		htLang.put("PALI", "Pali");
		htLang.put("PANJ", "Panjabi");
		htLang.put("PERS", "Persian");
		htLang.put("POLS", "Polish");
		htLang.put("POLY", "Polyglot");
		htLang.put("PORT", "Portuguese");
		htLang.put("PUSH", "Pushto");
		htLang.put("QUEC", "Quechua");
		htLang.put("RAET", "Raeto-Romance");
		htLang.put("RUMA", "Romanian");
		htLang.put("RUND", "Rundi");
		htLang.put("RUSS", "Russian");
		htLang.put("SAMO", "Samoan");
		htLang.put("SANG", "Sango");
		htLang.put("SANS", "Sanskrit");
		htLang.put("SARD", "Sardinian");
		htLang.put("SCOT", "Scottish Gaelic");
		htLang.put("SERB", "Serbian");
		htLang.put("SHON", "Shona");
		htLang.put("SIND", "Sindhi");
		htLang.put("SINH", "Sinhalese");
		htLang.put("SLVK", "Slovak");
		htLang.put("SLVN", "Slovenian");
		htLang.put("SOMA", "Somali");
		htLang.put("NDES", "Southern Ndebele");
		htLang.put("SESO", "Southern Sotho");
		htLang.put("SPAN", "Spanish");
		htLang.put("SUND", "Sundanese");
		htLang.put("SWAH", "Swahili");
		htLang.put("SWAZ", "Swazi");
		htLang.put("SWED", "Swedish");
		htLang.put("TAGA", "Tagalog");
		htLang.put("TAHI", "Tahitian");
		htLang.put("TAJI", "Tajik");
		htLang.put("TAMI", "Tamil");
		htLang.put("TATA", "Tatar");
		htLang.put("TELU", "Telugu");
		htLang.put("THAI", "Thai");
		htLang.put("TIBE", "Tibetan");
		htLang.put("TIGR", "Tigrinya");
		htLang.put("TONG", "Tongan");
		htLang.put("TSON", "Tsonga");
		htLang.put("TSWA", "Tswana");
		htLang.put("TURK", "Turkish");
		htLang.put("TURM", "Turkmen");
		htLang.put("TWIX", "Twi");
		htLang.put("UIGH", "Uighur");
		htLang.put("UKRA", "Ukrainian");
		htLang.put("URDU", "Urdu");
		htLang.put("UZBE", "Uzbek");
		htLang.put("VIET", "Vietnamese");
		htLang.put("VOLA", "Volapuk");
		htLang.put("WELS", "Welsh");
		htLang.put("WOLO", "Wolof");
		htLang.put("XHOS", "Xhosa");
		htLang.put("YIDD", "Yiddish");
		htLang.put("YORU", "Yoruba");
		htLang.put("ZHUA", "Zhuang");
		htLang.put("ZULU", "Zulu");
				
		htdelim.put("LTM", ";");
		htdelim.put("ATM", ";");
		htdelim.put("LT", ";");
		
		htconcat.put("CC", ";");
		htconcat.put("LNA", ";");
		htconcat.put("LNS", ";");
		htconcat.put("AS", "|");
		htconcat.put("LTM", "|");
		htconcat.put("LT", "|");
		htconcat.put("IC", "|");
		htconcat.put("ATM", "|");
		htconcat.put("PC", ";");
		htconcat.put("PN", ";");
		htconcat.put("PD", ";");
		htconcat.put("AC", ";");
		htconcat.put("AD", ";");
		htconcat.put("AP", ";");
		
		

	}
}
