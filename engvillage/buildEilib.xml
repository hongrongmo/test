<?xml version="1.0" encoding="UTF-8"?>
<!-- ************************************************************************
	This is the build file to generate the eilib JAR.  This JAR file is
	essentially a shared code library used by the other EV web applications
	(docview, engvillage, etc.).  The default target is "dist" which will
	distribute the JAR files to ALL web apps.  The "distfromtarget" target
	can be used for individual calls.
	************************************************************************* -->
<project name="eilib" default="jar">
    <!-- Path to ROOT project -->
    <property name="ROOT_PATH" value="../ROOT"/>

    <!-- Path to JAR file -->
    <property name="ROOT_JAR_PATH" value="./WebContent/WEB-INF/lib"/>

	<property environment="env"/>
	<!-- You *MUST* have CATALINA_HOME and JAVA_HOME setup as environment   -->
	<!-- variables on your local development box (Start button -> Computer, -->
	<!-- then select "System" and then "Advanced system settings")          -->
	<property environment="env"/>
	<target name="envcheck">
		<echo>[buildEilib] Checking environment variables...</echo>

		<condition property="env.check">
			<and>
				<isset property="env.CATALINA_HOME"/>
				<isset property="env.JAVA_HOME"/>
			</and>
		</condition>
	</target>

	<!--
	  javac Compilation Controls
	  These properties control option settings on the Javac compiler when it
	  is invoked using the <javac> task.

	  compile.debug        Should compilation include the debug option?
	  compile.deprecation  Should compilation include the deprecation option?
	  compile.optimize     Should compilation include the optimize option?
	-->
	<property name="eilib.compile.debug" value="true" />
	<property name="eilib.compile.deprecation" value="false" />
	<property name="eilib.compile.optimize" value="false" />

	<!--
	  Create the classpath for the compile.  Includes the Tomcat libraries
	  and all the libraries from the controller app.  Excludes books!
	-->
	<path id="eilib.classpath">
		<fileset id="eilib-jars" dir="${ROOT_PATH}/WebContent/WEB-INF/lib" includes="*.jar" />
		<fileset id="appserver-lib-jars" dir="${env.CATALINA_HOME}/lib" includes="*.jar" />
		<fileset id="appserver-bin-jars" dir="${env.CATALINA_HOME}/bin" includes="*.jar" />
	</path>

	<!-- ********************************************************************************** -->
	<!-- Show properties for build -->
	<!-- ********************************************************************************** -->
	<target name="showproperties">
		<echo>
			PROPERTIES FOR buildCompileController
			=====================================
            CATALINA_HOME= ${env.CATALINA_HOME}
        	JAVA_HOME = ${env.JAVA_HOME}
            ANT_HOME = ${env.ANT_HOME}
			ROOT_PATH = ${ROOT_PATH}
			ROOT_JAR_PATH = ${ROOT_JAR_PATH}
        </echo>
	</target>

	<target name="clean">
		<delete dir="./livebuild" failonerror="false"/>
	</target>

	<!-- ********************************************************************************** -->
	<!--
	  Compile Target

	  Uses javac to compile all the controller src files.  Outputs to a classes
	  directory. The "compile" target transforms source files (from your "src" directory)
	  into object files in the appropriate location in the build directory.
	-->
	<!-- ********************************************************************************** -->
	<target name="compile"  depends="showproperties, envcheck">
		<echo message="[engvillage - eilib build] Compiling source..."/>
		<fail unless="env.check"/>

		<!-- Create build folder if it doesn't exist -->
		<delete dir="./livebuild" failonerror="false"/>
		<mkdir dir="./livebuild"/>
		<mkdir dir="./livebuild/classes"/>

		<javac fork="true"
		   sourcepath=""
		   srcdir="${ROOT_PATH}/src"
		   destdir="./livebuild/classes"
		   debug="${eilib.compile.debug}"
		   deprecation="${eilib.compile.deprecation}"
		   optimize="${eilib.compile.optimize}"
		   memoryinitialsize="256m"
		   memorymaximumsize="512m"
		   classpathref="eilib.classpath"
			encoding="ISO8859_1"
		   includeantruntime="false">
			<exclude name="org/ei/data/books/tools/**" />
			<exclude name="org/ei/data/books/tocs/*" />
		</javac>

		<!-- Copy application resources -->
		<copy todir="./livebuild/classes">
			<fileset dir="${ROOT_PATH}/src" excludes="**/*.java" />
			<fileset dir="${ROOT_PATH}/resources" excludes="**/*.java" />
		</copy>


	</target>

	<!-- ********************************************************************************** -->
	<!-- Javadoc Target (optional)                      -->
	<!-- ********************************************************************************** -->
	<target name="javadoc" depends="">
		<mkdir dir="${javadoc.home}" />
		<javadoc sourcepath="${src.home}" packagenames="org.ei.*" classpath="${}" destdir="${javadoc.home}" />
	</target>

	<!-- ********************************************************************************** -->
	<!-- Dist Target from caller (param 'dist.lib' must be passed in!)                      -->
	<!-- ********************************************************************************** -->
	<target name="jar" depends="clean,compile" description="Create binary distribution via calling task">
		<echo message="[engvillage - eilib build] Creating eilib.jar..."/>

		<jar jarfile="${ROOT_JAR_PATH}/eilib.jar" basedir="./livebuild/classes">
			<exclude name="/org/ei/stripes/**"/>
			<exclude name="**/log4j.xml"/>
			<exclude name="**/log4j.properties"/>
		</jar>

	      <delete dir="./livebuild" failonerror="false"/>
	</target>

</project>
