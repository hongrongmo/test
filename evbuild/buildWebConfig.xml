<?xml version="1.0" encoding="UTF-8"?>
<project name="web-config" default="go">

	<!-- Default the property include to "dev" -->
	<property file="properties/${property_include}.properties" />
	<property name="log.level" value="WARN" />
	<property name="console.log.level" value="SEVERE" />
    
	<target name="go"
		depends="clean, 
        doCitedbyWebXml,
        doContentConfig,
		doLog4jProperties"></target>

	<target name="clean">
		<echo>Clean step, using property file ${property_include}.properties</echo>
		
		<!-- deployment descriptors -->
		<delete file="../citedby/WebContent/WEB-INF/web.xml" failonerror="false"/>
		<delete file="../docview/WebContent/WEB-INF/docview-servlet.xml" failonerror="false"/>

		<!-- contentConfig -->
		<delete file="../engvillage/WebContent/WEB-INF/ContentConfig.xml" failonerror="false"/>

        <!-- Runtime.properties -->
        <delete file="../sessionservice/src/Runtime.properties" failonerror="false"/>

	    <!-- log4j.properties -->
		<delete file="../ROOT/resources/log4j.properties" failonerror="false"/>
	</target>


    <!-- 
    *********************************************************************************
    BUILD the citedby web.xml file.  This cannot currently be replaced because the
    citedby app does NOT use the eilib.jar and therefore does not use the 
    RuntimeProperties class to retriev properties! 
    ********************************************************************************* 
    -->
	<target name="doCitedbyWebXml">
        <echo>
            ----------------
            -- citedbyserver --
            -- web.xml --
            ----------------
            citedbyServer=${citedbyServer}
            citedbycounturl=${citedbycounturl}
            citedbydetailurl=${citedbydetailurl}
            citedbyconsumer=${citedbyconsumer}
        </echo>
		<filter token="citedby_server" value="${citedbyServer}" />
		<filter token="citedbycounturl" value="${citedbycounturl}" />
		<filter token="citedbydetailurl" value="${citedbydetailurl}" />
		<filter token="citedbyconsumer" value="${citedbyconsumer}" />

		<copy file="web/web-citedby.xml" tofile="../citedby/WebContent/WEB-INF/web.xml"
			filtering="true" />
	</target>

    <!-- 
    *********************************************************************************
    BUILD the ContentConfig.xml file.  This file is used to route requests to the
    engvillage application.  It still needs substitution to be performed on the 
    contentConfigHost - essentially the path to the engvillage app per environment
    ********************************************************************************* 
    -->
	<target name="doContentConfig">
        <echo>
            -------------------
            -- ContentConfig --
            -------------------
            contentConfigHost=${contentConfigHost}
        </echo>

		<delete file="../ROOT/resources/ContentConfig.xml" failonerror="false" />
		<filter token="contentConfigHost" value="${contentConfigHost}" />
		<copy file="web/ContentConfig.xml" tofile="../ROOT/resources/ContentConfig.xml"
			filtering="true" />
	</target>

    <!-- 
    *********************************************************************************
    BUILD the Runtime.properties file based on the environment.  The 
    ${property_include} setting should indicate which Runtime.properties file to use
    from the "web" folder.  I.e., "local" would indicate Runtime_local.properties
    should be copied.
    ********************************************************************************* 
    -->
	<target name="doLog4jProperties">
		<echo>
			-----------------------------------
			-- Runtime.properties --
			-----------------------------------
		</echo>

	    <filter token="log.level" value="${log.level}"/>
	    <filter token="console.log.level" value="${console.log.level}"/>
	    <copy file="web/log4j.properties"
	          tofile="../ROOT/resources/log4j.properties"
	          filtering="true"/>

	</target>

    <!-- 
    *********************************************************************************
    BUILD the docview servlet XML file.  Just needs a simple substitution for the 
    path to Referex documents on disk.  Usually only valid for Cert/Prod environments
    ********************************************************************************* 
    -->
	<target name="doDocViewWebXml">
        <echo>
            ----------------
            -- docviewserver --
            -- web.xml --
            ----------------
            log_server=${log_server.machine}
            referex_path=$
            value=${referex_path}

        </echo>
		<filter token="log_server" value="${log_server.machine}" />
		<filter token="referex_path" value="${referex_path}" />
		<copy file="web/docview-servlet.xml" tofile="../docview/WebContent/WEB-INF/docview-servlet.xml"
			filtering="true" />
	</target>

</project>