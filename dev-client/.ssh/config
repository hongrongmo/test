Host *
Compression yes
ControlMaster no
ControlPath /tmp/%u@%l-%r@%h:%p.sock
ControlPersist 300
ServerAliveCountMax 20
ServerAliveInterval 15

#Settings for all AWS aliases/hostnames/IP addresses in internal VPC subnets
Host 10.178.* *.ec2.internal dataload usagep* newstar-cert:

#For clients that still need Netcat
#ProxyCommand /usr/bin/nc -w 120 -x localhost:7770 %h %p

#For recent versions (OpenSSH ~5.6+)
StrictHostKeyChecking no
UserKnownHostsFile=/dev/null
ProxyCommand ssh -i ~/.ssh/Prod.pem ec2-user@ec2-54-208-216-143.compute-1.amazonaws.com -W [%h]:%p
User ec2-user
#Key files are in ~/.ssh directory (${HOME}/.ssh) 
IdentityFile  ~/.ssh/non-Prod.pem
IdentityFile  ~/.ssh/Prod.pem 

#Settings for public addresses; w/ multiple IdentityFiles listed, each will be
#tried until a connection is made or the set of files is exhausted.
Host *.amazonaws.com bastion
User ec2-user
IdentityFile  ~/.ssh/non-Prod.pem
IdentityFile  ~/.ssh/Prod.pem 


#Without fixed IP addresses, HostName values will have to be updated
#Setting up aliases in local host files would prevent the need to modify things
#here.

#Settings for specific aliases/hostnames
Host dataload
User ec2-user
HostName 10.178.163.125

Host bastion
User ec2-user
HostName ec2-54-208-216-143.compute-1.amazonaws.com

Host usagep
User ec2-user
HostName 10.178.165.19

Host usagep34
User ec2-user
HostName 10.178.165.34

#User eptuser on Newstar-prod
Host newstar
HostName ec2-54-86-21-40.compute-1.amazonaws.com
User eptuser
IdentityFile ~/.ssh/eptuser.pem

#User eptuser on Newstar-cert
Host newstar-cert
HostName ip-10-178-169-213.ec2.internal
User eptuser
IdentityFile ~/.ssh/eptuser.pem

#Start dynamic SOCKS proxy between localhost port 7770 and AWS bastion host
#"ssh -N socksproxy&" will run it in the background with no shell on bastion.
Host socksproxy
HostName ec2-54-208-216-143.compute-1.amazonaws.com
user ec2-user
DynamicForward 127.0.0.1:7770 

#"ssh -N eiatunnel&" will open the tunnel connection without running a shell
#on the bastion host and run the process in the background.
Host alldbs
HostName ec2-54-208-216-143.compute-1.amazonaws.com
LocalForward 127.0.0.1:5523 eia.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521
LocalForward 127.0.0.1:5522 eib.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 
LocalForward 127.0.0.1:5521 eid.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521

#"ssh -N eiatunnel&" will open the tunnel connection without running a shell
#on the bastion host and run the process in the background.
Host eiatunnel
HostName ec2-54-208-216-143.compute-1.amazonaws.com
LocalForward 127.0.0.1:5523 eia.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521

#"ssh -N eibtunnel&" will open the tunnel connection without running a shell
#on the bastion host and run the process in the background.
Host eibtunnel
HostName ec2-54-208-216-143.compute-1.amazonaws.com
LocalForward 127.0.0.1:5522 eib.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 

#"ssh -N eidtunnel&" will open the tunnel connection without running a shell
#on the bastion host and run the process in the background.
Host eidtunnel
HostName ec2-54-208-216-143.compute-1.amazonaws.com
LocalForward 127.0.0.1:5521 eid.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521

#Proxy and tunnel shell commands:
#Start dynamic SOCKS proxy between localhost port 7770 and AWS bastion host
#(Usable with web browsers and SSH [with netcat ProxyCommand])
#ssh -v -N -D 127.0.0.1:7770 -i ~/.ssh/Prod.pem bastion& 

#Create tunnels from localhost to eid,eib and eia AWS RDS instances
#Client software would connect to local ports 1521-1523 (eid,eib and eia)
#ssh -N -v -L 1521:eid.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&
#ssh -N -v -L 1522:eib.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&
#ssh -N -v -L 1523:eia.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&

#bash aliases
#alias socksproxy="ssh -v -N -D 127.0.0.1:7770 -i ~/.ssh/Prod.pem bastion&" 
#alias eidtunnel="ssh -N -v -L 1521:eid.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&"
#alias eibtunnel="ssh -N -v -L 1522:eib.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&"
#alias eiatunnel="ssh -N -v -L 1523:eia.cmdvszxph9cf.us-east-1.rds.amazonaws.com:1521 bastion&"
