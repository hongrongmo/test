<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright Â©2017 LexisNexis Univentio, The Netherlands. -->
<lexisnexis-patent-document schema-version="1.13" date-produced="20170531" file="US20160320942A1.xml" produced-by="LexisNexis-Univentio" lang="eng" date-inserted="20161103" time-inserted="084850" date-changed="20170531" time-changed="114839">
  <bibliographic-data lang="eng">
    <publication-reference publ-type="Application" publ-desc="Patent application (publication)">
      <document-id id="127356071">
        <country>US</country>
        <doc-number>20160320942</doc-number>
        <kind>A1</kind>
        <date>20161103</date>
      </document-id>
      <document-id data-format="original">
        <country>US</country>
        <doc-number>20160320942</doc-number>
        <kind>A1</kind>
        <date>20161103</date>
      </document-id>
      <document-id data-format="docdb" id="471118085">
        <doc-number>2016320942</doc-number>
      </document-id>
      <document-id data-format="epodoc">
        <doc-number>US2016320942</doc-number>
      </document-id>
    </publication-reference>
    <application-reference appl-type="utility">
      <document-id id="80404631">
        <country>US</country>
        <doc-number>15211572</doc-number>
        <date>20160715</date>
      </document-id>
      <document-id data-format="original">
        <country>US</country>
        <doc-number>15211572</doc-number>
        <date>20160715</date>
      </document-id>
      <document-id data-format="docdb" id="471118084">
        <doc-number>201615211572</doc-number>
      </document-id>
      <document-id data-format="epodoc">
        <doc-number>US201615211572</doc-number>
      </document-id>
    </application-reference>
    <application-series-code>15</application-series-code>
    <language-of-filing>eng</language-of-filing>
    <language-of-publication>eng</language-of-publication>
    <dates-of-public-availability date-changed="20161110">
      <unexamined-printed-without-grant>
        <date>20161103</date>
      </unexamined-printed-without-grant>
    </dates-of-public-availability>
    <classifications-ipcr date-changed="20161115">
      <classification-ipcr sequence="1">
        <text>G06F   3/0481      20130101AFI20161103BHUS        </text>
        <ipc-version-indicator>
          <date>20130101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>0481</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161103</date>
        </action-date>
        <generating-office>
          <country>US</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-ipcr>
      <classification-ipcr sequence="2">
        <text>G06F   3/14        20060101ALI20161103BHUS        </text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>14</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161103</date>
        </action-date>
        <generating-office>
          <country>US</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-ipcr>
      <classification-ipcr sequence="3">
        <text>G06F   9/44        20060101ALI20161103BHUS        </text>
        <ipc-version-indicator>
          <date>20060101</date>
        </ipc-version-indicator>
        <classification-level>A</classification-level>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>44</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161103</date>
        </action-date>
        <generating-office>
          <country>US</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-ipcr>
    </classifications-ipcr>
    <classifications-cpc date-changed="20161115">
      <classification-cpc sequence="1">
        <text>G06F   3/04812     20130101 FI20161103BHEP        </text>
        <cpc-version-indicator>
          <date>20130101</date>
        </cpc-version-indicator>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>04812</subgroup>
        <symbol-position>F</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161103</date>
        </action-date>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-cpc>
      <classification-cpc sequence="2">
        <text>G06F   3/1454      20130101 LI20161105BHEP        </text>
        <cpc-version-indicator>
          <date>20130101</date>
        </cpc-version-indicator>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>3</main-group>
        <subgroup>1454</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161105</date>
        </action-date>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-cpc>
      <classification-cpc sequence="3">
        <text>G06F   9/4445      20130101 LI20161105BHEP        </text>
        <cpc-version-indicator>
          <date>20130101</date>
        </cpc-version-indicator>
        <section>G</section>
        <class>06</class>
        <subclass>F</subclass>
        <main-group>9</main-group>
        <subgroup>4445</subgroup>
        <symbol-position>L</symbol-position>
        <classification-value>I</classification-value>
        <action-date>
          <date>20161105</date>
        </action-date>
        <generating-office>
          <country>EP</country>
        </generating-office>
        <classification-status>B</classification-status>
        <classification-data-source>H</classification-data-source>
      </classification-cpc>
    </classifications-cpc>
    <number-of-claims calculated="yes">20</number-of-claims>
    <invention-title id="title_eng" date-changed="20161103" lang="eng" format="original">Synchronizing a Cursor from a Managed System with a Cursor from a Remote System</invention-title>
    <related-documents date-changed="20161103">
      <continuation>
        <relation>
          <parent-doc>
            <document-id>
              <country>US</country>
              <doc-number>13744978</doc-number>
              <date>20130118</date>
            </document-id>
            <document-id data-format="original">
              <country>US</country>
              <doc-number>13744978</doc-number>
              <date>20130118</date>
            </document-id>
            <parent-status>GRANTED</parent-status>
            <parent-grant-document>
              <document-id>
                <country>US</country>
                <doc-number>9396002</doc-number>
              </document-id>
              <document-id data-format="original">
                <country>US</country>
                <doc-number>9396002</doc-number>
              </document-id>
            </parent-grant-document>
          </parent-doc>
          <child-doc>
            <document-id>
              <country>US</country>
              <doc-number>15002115</doc-number>
            </document-id>
            <document-id data-format="original">
              <country>US</country>
              <doc-number>15211572</doc-number>
            </document-id>
          </child-doc>
        </relation>
      </continuation>
    </related-documents>
    <parties date-changed="20161103">
      <applicants>
        <applicant sequence="1" app-type="applicant" designation="us-only">
          <addressbook lang="eng">
            <orgname>DELL PRODUCTS, LP</orgname>
            <address>
              <city>Round Rock</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
          <residence>
            <country>US</country>
          </residence>
        </applicant>
      </applicants>
      <inventors>
        <inventor sequence="1" designation="us-only">
          <addressbook lang="eng">
            <last-name>Liu</last-name>
            <first-name>Wei</first-name>
            <address>
              <city>Austin</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
        </inventor>
        <inventor sequence="2" designation="us-only">
          <addressbook lang="eng">
            <last-name>Moyes</last-name>
            <first-name>William A.</first-name>
            <address>
              <city>Austin</city>
              <state>TX</state>
              <country>US</country>
            </address>
          </addressbook>
        </inventor>
      </inventors>
    </parties>
    <patent-family date-changed="20161103">
      <main-family family-id="186550628">
        <family-member>
          <document-id>
            <country>US</country>
            <doc-number>20160320942</doc-number>
            <kind>A1</kind>
            <date>20161103</date>
          </document-id>
          <application-date>
            <date>20160715</date>
          </application-date>
        </family-member>
      </main-family>
      <complete-family family-id="186550625">
        <family-member>
          <document-id>
            <country>US</country>
            <doc-number>20160320942</doc-number>
            <kind>A1</kind>
            <date>20161103</date>
          </document-id>
          <application-date>
            <date>20160715</date>
          </application-date>
        </family-member>
      </complete-family>
    </patent-family>
  </bibliographic-data>
  <abstract id="abstr_eng" date-changed="20161103" lang="eng" format="original">
    <p id="p-a-00001-en" num="0000">A method includes receiving reports of the pointing device events occurring on a remote computer at a host computer and performing computations in the host computer based upon the mouse reports. The method includes generating screen images in the host computer based upon the computations, the screen images not containing images of a cursor representing locations pointed to by a pointing device of the host computer. The generated screen images are transmitted to the remote computer. In some embodiments, the reports may be received by a remote console controller. An information handling system includes boot firmware to set a mouse to operate in absolute mode under control of the boot firmware. An information handling system separately transmits to a remote console controller of the information handling system screen images without a cursor and cursor images.</p>
  </abstract>
  <legal-data date-changed="20170304">
    <legal-event sequence="1">
      <publication-date>
        <date>20160810</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT, NO</new-owner>
      <free-text-description>SUPPLEMENT TO PATENT SECURITY AGREEMENT (ABL);ASSIGNORS:AVENTAIL LLC;DELL PRODUCTS L.P.;DELL SOFTWARE INC.;AND OTHERS;REEL/FRAME:039643/0953</free-text-description>
      <effective-date>
        <date>20160808</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="2">
      <publication-date>
        <date>20160810</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>THE BANK OF NEW YORK MELLON TRUST COMPANY, N.A., A</new-owner>
      <free-text-description>SUPPLEMENT TO PATENT SECURITY AGREEMENT (NOTES);ASSIGNORS:AVENTAIL LLC;DELL PRODUCTS L.P.;DELL SOFTWARE INC.;AND OTHERS;REEL/FRAME:039644/0084</free-text-description>
      <effective-date>
        <date>20160808</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="3">
      <publication-date>
        <date>20160810</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>BANK OF AMERICA, N.A., AS COLLATERAL AGENT, NORTH</new-owner>
      <free-text-description>SUPPLEMENT TO PATENT SECURITY AGREEMENT (TERM LOAN);ASSIGNORS:AVENTAIL LLC;DELL PRODUCTS L.P.;DELL SOFTWARE INC.;AND OTHERS;REEL/FRAME:039719/0889</free-text-description>
      <effective-date>
        <date>20160808</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="4">
      <publication-date>
        <date>20160913</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>AVENTAIL LLC, CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (ABL);ASSIGNOR:BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT;REEL/FRAME:040013/0733</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="5">
      <publication-date>
        <date>20160913</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL SOFTWARE INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (ABL);ASSIGNOR:BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT;REEL/FRAME:040013/0733</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="6">
      <publication-date>
        <date>20160913</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL PRODUCTS L.P., TEXAS</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (ABL);ASSIGNOR:BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT;REEL/FRAME:040013/0733</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="7">
      <publication-date>
        <date>20160913</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>FORCE10 NETWORKS, INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (ABL);ASSIGNOR:BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT;REEL/FRAME:040013/0733</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="8">
      <publication-date>
        <date>20160913</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>WYSE TECHNOLOGY L.L.C., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (ABL);ASSIGNOR:BANK OF AMERICA, N.A., AS ADMINISTRATIVE AGENT;REEL/FRAME:040013/0733</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="9">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>FORCE10 NETWORKS, INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (NOTES);ASSIGNOR:BANK OF NEW YORK MELLON TRUST COMPANY, N.A., AS COLLATERAL AGENT;REEL/FRAME:040026/0710</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="10">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL SOFTWARE INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (NOTES);ASSIGNOR:BANK OF NEW YORK MELLON TRUST COMPANY, N.A., AS COLLATERAL AGENT;REEL/FRAME:040026/0710</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="11">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL PRODUCTS L.P., TEXAS</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (NOTES);ASSIGNOR:BANK OF NEW YORK MELLON TRUST COMPANY, N.A., AS COLLATERAL AGENT;REEL/FRAME:040026/0710</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="12">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL PRODUCTS L.P., TEXAS</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (TL);ASSIGNOR:BANK OF AMERICA, N.A., AS COLLATERAL AGENT;REEL/FRAME:040027/0329</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="13">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>DELL SOFTWARE INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (TL);ASSIGNOR:BANK OF AMERICA, N.A., AS COLLATERAL AGENT;REEL/FRAME:040027/0329</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="14">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>AVENTAIL LLC, CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (NOTES);ASSIGNOR:BANK OF NEW YORK MELLON TRUST COMPANY, N.A., AS COLLATERAL AGENT;REEL/FRAME:040026/0710</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="15">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>WYSE TECHNOLOGY L.L.C., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (TL);ASSIGNOR:BANK OF AMERICA, N.A., AS COLLATERAL AGENT;REEL/FRAME:040027/0329</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="16">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>FORCE10 NETWORKS, INC., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (TL);ASSIGNOR:BANK OF AMERICA, N.A., AS COLLATERAL AGENT;REEL/FRAME:040027/0329</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="17">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>AVENTAIL LLC, CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (TL);ASSIGNOR:BANK OF AMERICA, N.A., AS COLLATERAL AGENT;REEL/FRAME:040027/0329</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
    <legal-event sequence="18">
      <publication-date>
        <date>20160914</date>
      </publication-date>
      <event-code-1>AS</event-code-1>
      <legal-description>ASSIGNMENT</legal-description>
      <status-identifier>C</status-identifier>
      <docdb-publication-number> US  2016320942A1</docdb-publication-number>
      <docdb-application-id>471118084</docdb-application-id>
      <new-owner>WYSE TECHNOLOGY L.L.C., CALIFORNIA</new-owner>
      <free-text-description>RELEASE OF SEC. INT. IN PATENTS (NOTES);ASSIGNOR:BANK OF NEW YORK MELLON TRUST COMPANY, N.A., AS COLLATERAL AGENT;REEL/FRAME:040026/0710</free-text-description>
      <effective-date>
        <date>20160907</date>
      </effective-date>
    </legal-event>
  </legal-data>
  <description id="descr_eng" lang="eng" format="original" date-changed="20161103">
    <related-apps>
      <heading id="h-00001-en" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading>
      <p id="p-00001-en" num="0001">This application is a continuation of U.S. patent application Ser. No. 13/744,978, entitled âSynchronizing A Cursor from a Managed System with a Cursor from a Remote System,â filed on Jan. 18, 2013, the disclosure of which is hereby expressly incorporated by reference in its entirety.</p>
    </related-apps>
    <summary>
      <heading id="h-00002-en" level="1">FIELD OF THE DISCLOSURE</heading>
      <p id="p-00002-en" num="0002">This disclosure generally relates to information handling systems, and more particularly relates to synchronizing a cursor from a managed system with a cursor from a remote system.</p>
      <heading id="h-00003-en" level="1">BACKGROUND</heading>
      <p id="p-00003-en" num="0003">As the value and use of information continues to increase, individuals and businesses seek additional ways to process and store information. One option is an information handling system. An information handling system generally processes, compiles, stores, and/or communicates information or data for business, personal, or other purposes. Because technology and information handling needs and requirements can vary between different applications, information handling systems can also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information can be processed, stored, or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing, airline reservations, enterprise data storage, or global communications. In addition, information handling systems can include a variety of hardware and software components that can be configured to process, store, and communicate information and can include one or more computer systems, data storage systems, and networking systems. In a networking system, a local device, such as a server, may be managed from a remote device, such as a computer. A display on the remote device may include both a cursor indicating a position of a pointing device on the remote device and a cursor representing a position of a physical or virtual pointing device on the local device.</p>
    </summary>
    <description-of-drawings>
      <heading id="h-00004-en" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
      <p id="p-00004-en" num="0004">It will be appreciated that for simplicity and clarity of illustration, elements illustrated in the Figures have not necessarily been drawn to scale. For example, the dimensions of some of the elements are exaggerated relative to other elements. Embodiments incorporating teachings of the present disclosure are shown and described with respect to the drawings presented herein, in which:</p>
      <p id="p-00005-en" num="0005">
        <figref>FIG. 1</figref> illustrates a block diagram of a host computer and a remote computer connected over a network, according to one embodiment of the disclosure;</p>
      <p id="p-00006-en" num="0006">
        <figref>FIG. 2</figref> illustrates a diagram of a prior art screen image from a remote computer;</p>
      <p id="p-00007-en" num="0007">
        <figref>FIG. 3</figref> illustrates a diagram of a screen image from a remote computer according to one embodiment of the disclosure;</p>
      <p id="p-00008-en" num="0008">
        <figref>FIG. 4A</figref> illustrates a block diagram of a host computer according to one embodiment of the disclosure;</p>
      <p id="p-00009-en" num="0009">
        <figref>FIG. 4B</figref> illustrates a block diagram of a host computer according to another embodiment of the disclosure;</p>
      <p id="p-00010-en" num="0010">
        <figref>FIG. 5</figref> is a flow diagram illustrating a method according to one embodiment of the disclosure;</p>
      <p id="p-00011-en" num="0011">
        <figref>FIG. 6</figref> is a is a flow diagram illustrating a method according to another embodiment of the disclosure; and</p>
      <p id="p-00012-en" num="0012">
        <figref>FIG. 7</figref> illustrates a block diagram of an information handling system according to one embodiment of the disclosure.</p>
    </description-of-drawings>
    <detailed-desc>
      <p id="p-00013-en" num="0013">The use of the same reference symbols in different drawings indicates similar or identical items.</p>
      <heading id="h-00005-en" level="1">DETAILED DESCRIPTION OF DRAWINGS</heading>
      <p id="p-00014-en" num="0014">The following description in combination with the Figures is provided to assist in understanding the teachings disclosed herein. The following discussion will focus on specific implementations and embodiments of the teachings. This focus is provided to assist in describing the teachings and should not be interpreted as a limitation on the scope or applicability of the teachings. However, other teachings can certainly be utilized in this application. The teachings can also be utilized in other applications and with several different types of architectures such as distributed computing architectures, client/server architectures, or middleware server architectures and associated components.</p>
      <p id="p-00015-en" num="0015">For purposes of this disclosure, an information handling system can include any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes. For example, an information handling system can be a personal computer, a PDA, a consumer electronic device, a network server or storage device, a switch router, wireless router, or other network communication device, or any other suitable device and can vary in size, shape, performance, functionality, and price. The information handling system can include memory, one or more processing resources such as a central processing unit (CPU) or hardware or software control logic. Additional components of the information handling system can include one or more storage devices, one or more communications ports for communicating with external devices as well as various input and output (I/O) devices, such as a keyboard, a mouse, and a video display. The information handling system can also include one or more buses operable to transmit communications between the various hardware components.</p>
      <p id="p-00016-en" num="0016">
        <figref>FIG. 1</figref> shows a system <b>100</b> that includes host computer <b>110</b> and remote management computer <b>150</b> connected by a communications network <b>149</b>, such as the Internet or a private network. Host computer <b>110</b> includes remote console controller <b>115</b>, a variety of other components <b>147</b> collectively referred to as Rest of System, video handler <b>140</b>, and mouse handler <b>145</b>. Rest of System <b>147</b> may include one or more central processing units (CPUs), memory, one or more operating systems (OS), firmware such as Basic Input/Output System (BIOS) or Unified Extensible Firmware Interface (UEFI), and other components. BIOS may be loaded at boot and be in charge of testing the components of a computer, starting it up, and loading an operating system. UEFI extends the functions of BIOS. In this application, BIOS, UEFI, and other firmware controlling the boot process will be referred to as boot firmware. Remote console controller <b>115</b> includes video handler <b>120</b>, virtual mouse <b>125</b>, networking software <b>130</b>, and Ethernet controller <b>135</b>.</p>
      <p id="p-00017-en" num="0017">Remote management computer <b>150</b> includes remote management client <b>155</b>, Rest of System <b>175</b>, keyboard <b>180</b>, mouse <b>185</b>, display device <b>187</b>, and network interface card <b>190</b>. Remote management client <b>155</b> includes video handler <b>160</b>, network handler <b>165</b>, and keyboard and mouse handler <b>170</b>. Rest of System <b>175</b> may include one or more central processing units (CPUs), memory, one or more operating systems (OS), firmware such as BIOS or UEFI, and other components.</p>
      <p id="p-00018-en" num="0018">In system <b>100</b>, a user operating at remote management computer <b>150</b> may control the operation of host computer <b>110</b> through the use of remote management client <b>155</b>. Through the user interface provided by keyboard <b>180</b>, mouse <b>185</b>, and display device <b>187</b>, the user may enter commands that are transmitted over network <b>149</b> to host computer <b>110</b>. In particular, user interactions with mouse <b>185</b> of remote management computer <b>150</b> may be processed by remote management computer <b>150</b>, sent over network <b>149</b> to host computer <b>115</b>, and further processed there. In addition, remote management client may enable the display of screen images generated on host computer <b>115</b> on display device <b>187</b> of remote management computer <b>150</b>. This display may enable the user to monitor the operation of host computer <b>110</b> from remote management computer <b>150</b>.</p>
      <p id="p-00019-en" num="0019">In some embodiments, the user interactions may include moving mouse <b>185</b> and depressing buttons of mouse <b>185</b>. In response to these interactions, mouse <b>185</b> may generate signals to represent the interactions. These signals may be processed by Rest of System <b>175</b>. In some embodiments, a mouse microcontroller, mouse device handler, and an operating system of Rest of System <b>175</b> may process the signals from mouse <b>185</b>. In further embodiments, the signals may be translated into mouse events. A mouse may report location by two distinct methods. In relative mode, a mouse may report the change in x and y coordinates since the last report. In absolute mode, a mouse may report the current x and y coordinates.</p>
      <p id="p-00020-en" num="0020">Rest of System <b>175</b> may transmit the processed mouse signals, such as reports of mouse events, to keyboard and mouse handler <b>170</b> of remote management client <b>155</b>. Keyboard and mouse handler <b>170</b> of remote management client <b>155</b> may process the reports of mouse and keyboard events, and send the processed reports to network handler <b>165</b>. Network handler <b>165</b> may place the reports in a suitable format for transmission over a network and transmit them to network interface card <b>190</b>. From there, the reports may be sent to remote console controller <b>115</b> of host computer <b>110</b> over network <b>149</b>. In many embodiments, keystrokes entered into keyboard <b>180</b> of remote management computer <b>150</b> may be transmitted over network <b>149</b> to host computer <b>110</b>.</p>
      <p id="p-00021-en" num="0021">Rest of System <b>175</b> may also generate screen images based upon the processing undergone at remote management computer <b>150</b>, including processing based upon the keyboard and mouse input. These screen images may be displayed on display device <b>187</b>, and may include a cursor icon representing the location pointed to by mouse <b>185</b>. This is the location indicated on display device <b>187</b> that will respond to mouse or keyboard input. When the location is in a text file, text will be entered there. When the location is at an icon, clicking on the mouse may open an application represented by the icon. When remote management computer <b>150</b> is engaged in managing the operation of host computer <b>110</b>, the screen images may include images generated by the operation of host computer <b>110</b>. These screen images may include a cursor representing a location pointed to by a pointing device of host computer <b>110</b>. The images may enable an operator at remote management computer <b>150</b> to control the operation of host computer <b>110</b>.</p>
      <p id="p-00022-en" num="0022">Remote console controller <b>115</b> enables the control of host computer <b>110</b> from a remote computer, such as remote management computer <b>150</b>. In some embodiments, remote console controller <b>115</b> may be hardware based. It may, for example, contain multiple built-in hardware components on a single chip. In particular, video handler <b>120</b> may be a chip or other physical component to process video. Examples of remote console controllers include the Dellâ¢ Integrated Dell Remote Access Controller (iDRACâ¢), Fujitsu's remote management card iRMC, HP integrated Lights-Out (iLO), Sun integration Lights Out Management (ILOM), and IBM Remote Supervisor Adapter II (RSA II). In some embodiments, remote console controller <b>115</b> may interface with a baseboard management controller (BMC) on host computer <b>110</b>. The BMC may be a chip embedded in host computer <b>110</b> that monitors and reports operating information, including the power state of the server, temperatures inside the server, and hardware error conditions, such as broken fans.</p>
      <p id="p-00023-en" num="0023">In host computer <b>110</b>, Ethernet controller <b>135</b> provides an interface between remote console <b>115</b> and network <b>149</b>. It receives packets over a network and sends them to networking software <b>130</b>. Remote console controller <b>115</b> may be capable of operating out-of-band (<b>00</b>B); that is, without the operation of an operating system in host computer <b>110</b>. Because of its networking components, Ethernet controller <b>135</b> and networking software <b>130</b>, it may be able to communicate over a network even without the intervention of an operating system of host computer <b>110</b>.</p>
      <p id="p-00024-en" num="0024">The communications received by Ethernet controller <b>135</b> may include mouse and keyboard reports received from remote management client <b>155</b>. Networking software <b>130</b> may extract the content in a suitable format and pass the content to virtual mouse <b>125</b>. A virtual mouse is a component of an information handling system that may emulate a physical mouse or other pointing device attached to the system. Virtual mouse <b>125</b> may receive reports of mouse events from remote management computer <b>150</b> and transmit them to mouse handler <b>145</b>. The transmitted reports may follow the same protocols as reports from an actual physical mouse. In some embodiments of <figref>FIG. 1</figref>, virtual mouse <b>125</b> may be a physical component of remote console controller <b>115</b>. In other embodiments, virtual mouse <b>125</b> may be a software component. In many embodiments, virtual mouse <b>125</b> may be capable of operating in either relative mode or absolute mode. In further embodiments, virtual mouse <b>125</b> may operate in absolute mode even though it receives reports in relative mode. It may, for example, keep track of the current position of its cursor and increment the current position with the changes in x- and y-coordinates obtained from the relative mode reports to generate an updated current position. It may then report the x and y coordinates of the current position.</p>
      <p id="p-00025-en" num="0025">In some embodiments, host computer <b>110</b> may include pointing devices other than virtual mouse <b>125</b>. UEFI, BIOS, or OS may permit several physical pointing devices to be plugged into a computer. The pointing devices may include a physical mouse, a track ball, a touch pad, or other pointing devices. These other pointing devices may also transmit reports to mouse handler <b>145</b>. The reports may describe events generated by a user interaction with the pointing device, such as pointing to a location of a display device or depressing a button. These events will be referred to as pointing device events. The UEFI, BIOS, or OS may determine that one of the pointing devices is active and display a cursor representing the location pointed to by the active device on a screen image.</p>
      <p id="p-00026-en" num="0026">Mouse handler <b>145</b> may process the reports of mouse events from virtual mouse <b>125</b>. Mouse handler <b>145</b> may include a mouse driver or drivers. Rest of System <b>147</b> may receive the mouse reports from mouse handler <b>145</b> and perform computations based upon the report. For example, a mouse report of clicking on the location of an icon may cause a window to open. The computations may include calculations of screen images to represent the results of processing the mouse events. The screen image data may include a cursor indicating a location of a pointing device on host computer <b>110</b>.</p>
      <p id="p-00027-en" num="0027">This screen image data is transmitted to video handler <b>140</b> for processing. The results are transmitted to video handler <b>120</b> of remote console controller <b>115</b> for further processing. They may also be transmitted to an input/output (I/O) interface for output to a display device host computer <b>110</b>. Video handler <b>120</b> may transmit the processed screen image data over network <b>149</b> to remote management computer <b>150</b> via networking software <b>130</b> and Ethernet controller <b>135</b>. The screen image data may be received by network interface card <b>190</b> and processed by remote management computer <b>150</b>. The processing may include processing by video handler <b>160</b> of remote management client <b>160</b> and processing by Rest of System <b>175</b>. Eventually, screen images produced from the screen image data may be displayed on display device <b>187</b>.</p>
      <p id="p-00028-en" num="0028">Thus, when a user at remote management computer <b>150</b> is engaged in managing the operation of host computer <b>110</b>, screen images displayed on display device <b>187</b> may include a cursor representing a location of the virtual mouse of host computer <b>110</b>. In addition, the screen images may include a cursor representing a location of mouse <b>185</b>. As a result, if the two cursors are not synchronized, the display at display device <b>187</b> may include two cursors. <figref>FIG. 2</figref> illustrates a screen image <b>200</b> showing the results of a prior art display. Screen image <b>200</b> is generated on a host computer and displayed on a remote computer. Screen image <b>200</b> includes window <b>210</b>. Window <b>210</b> includes cursor <b>220</b> and cursor <b>230</b>. Cursor <b>220</b> may represent a location of a pointing device on a remote computer and cursor <b>230</b> may represent a location of a pointing device on a host computer.</p>
      <p id="p-00029-en" num="0029">There may be multiple causes of this duplication of cursor images when operating a computer remotely. A user at the remote computer may, for example, move the mouse outside of a window representing the local computer from one side and re-enters the display from the opposite side of the window. The reports of relative motion sent from the remote computer to the local computer may omit the large displacement that occurred outside of the window. In addition, the translation of movement to position may differ among different operating systems and different boot firmware, such as BIOS or UEFI. For example, the translation may not be linear. When a mouse is moving fast, the distances reported as traveled may be more than linearly greater than the distances reported as traveled when it is moving slower. This non-proportionality may differ among different mice. Further, this translation may be affected by network latency. As a result of the latency, the local computer may determine that the mouse is moving slowly and translate the reported changes in x and y coordinates to smaller increments of distance than the remote computer.</p>
      <p id="p-00030-en" num="0030">In contrast to prior art, in system <b>100</b> of <figref>FIG. 1</figref>, the display of cursors is synchronized. An example display is shown in <figref>FIG. 3</figref>. Window <b>300</b> represents a display on a remote computer of the processing on a host computer. Window <b>300</b> includes cursor <b>310</b>. As can be seen, there is a single cursor in window <b>300</b>.</p>
      <p id="p-00031-en" num="0031">System <b>100</b> can synchronize the cursor from host computer <b>110</b> and the cursor from remote management computer <b>150</b> by multiple methods. In one approach, the cursor image generated on host computer <b>110</b> and transmitted to remote management computer <b>150</b> can be overlaid with the cursor generated on remote management computer <b>150</b>. In some embodiments, the user at remote management computer <b>150</b> may see only the top cursor. In another approach, one or another of the cursors can be hidden. The cursor from host computer <b>110</b> may be hidden either before transmission to remote management computer <b>150</b> or afterwards. If hidden before, it may be hidden by firmware, by an operating system, or by remote console controller <b>115</b>. If hidden after transmission to remote management computer <b>150</b>, the cursor from host computer <b>110</b> may be hidden by remote management client <b>155</b> or by an operating system of remote management computer <b>150</b>.</p>
      <p id="p-00032-en" num="0032">Similarly, if the cursor from remote management computer <b>150</b> is hidden, it may be hidden by remote management client <b>155</b> or by an operating system of remote management computer <b>150</b>. The hiding may be done by suppressing the generation of the image of the cursor or by creating a cursor image that is invisible when overlaid with the rest of an image of a screen. Suppressing the generation of the cursor image includes generating a screen image that does not contain the cursor image. In many embodiments, the generation of a screen image may be performed by generating the image apart from the cursor and overlaying an image of the cursor. The suppression may be accomplished by withholding the overlaying of the cursor image. The discussion of <figref>FIGS. 4A and 4B</figref> will provide more detail about techniques for hiding the image of the cursor from host computer <b>110</b>.</p>
      <p id="p-00033-en" num="0033">
        <figref>FIG. 4A</figref> shows computer <b>400</b> which includes remote console controller <b>410</b>, video controller <b>420</b>, and Rest of System <b>445</b>. Computer <b>400</b> may be similar to host computer <b>110</b> of <figref>FIG. 1</figref>. It may be connected over a network to a remote computer and controlled from the remote computer by means of remote console controller <b>410</b>. Remote console controller <b>410</b> contains digital video compressor <b>412</b>, networking software <b>414</b>, Ethernet controller <b>416</b>, and virtual mouse <b>418</b>. Remote console controller <b>410</b> may be similar to remote console controller <b>115</b> of <figref>FIG. 1</figref>. Rest of System <b>445</b> includes basic input/output system (BIOS) <b>440</b>. Rest of System <b>445</b> may be similar to Rest of System <b>147</b> of <figref>FIG. 1</figref>. Video controller <b>420</b> includes video digital to analog converter (DAC) <b>422</b>, hardware cursor location registers <b>424</b>, cursor generator <b>426</b>, hardware cursor image buffer <b>428</b>, image combiner <b>430</b>, frame buffer <b>432</b>, and raster generator <b>434</b>. DAC <b>422</b> may convert digital representations of screen images into analog images for display on a display device such as a monitor. Hardware cursor location registers <b>424</b> may store the current location of the cursor of the currently-active pointing device of computer <b>400</b>. Hardware cursor image buffer <b>428</b> may store an image or images of a cursor of computer <b>450</b>. It may store different cursors which represent different possible user interactions through a pointing device. A cursor may appear as an arrow to indicate movement over an inactive window, but may change to an I-beam shape over an active text document to indicate where text will be inserted. Cursor generator <b>426</b> may generate the current image of the cursor in the current location.</p>
      <p id="p-00034-en" num="0034">Frame buffer <b>432</b> may store screen images generated by the operation of computer <b>400</b>. In many embodiments, the screen images may be stored as pixels. Frame buffer <b>432</b> may be composed of random-access memory (RAM). Raster generator <b>434</b> may receive data representing the screen images and may rasterize it or convert it to pixels for display on a display device. The rasterization process may involve ordering pixels from frame buffer <b>432</b> in the order in which they will be displayed on the display device. Image combiner <b>430</b> may combine the rasterized screen images received from raster generator <b>434</b> and the cursor image received from <b>426</b> to produce a screen image containing an image of a cursor.</p>
      <p id="p-00035-en" num="0035">The cursor displayed may represent the location pointed to by virtual mouse <b>418</b>, which in turn may represent the location of a mouse pointer on a remote computer controlling computer <b>400</b>. Virtual mouse <b>418</b> may receive mouse reports from a remote computer through Ethernet controller <b>416</b> and networking software <b>414</b> and may transmit mouse reports to BIOS <b>440</b> or other components of Rest of System <b>445</b>. Rest of System <b>445</b> may generate data for the production of screen images based upon inputs to computer <b>400</b>. The screen images may include a cursor. In the embodiment of <figref>FIG. 4A</figref>, the cursor image may be generated separately from the rest of the screen image.</p>
      <p id="p-00036-en" num="0036">Computer <b>400</b> may cause the synchronization of the display of its cursor on a remote computer controlling it with the display of the cursor of the remote computer. In many embodiments, it may suppress the drawing of the cursor representing the location pointed to by virtual mouse <b>418</b>. In further embodiments, the suppression may be implemented by setting virtual mouse <b>418</b> to operate in absolute mode and suppressing the drawing of the cursor when the active pointing device is operating in absolute mode.</p>
      <p id="p-00037-en" num="0037">Virtual mouse <b>418</b> may be capable of operating in either absolute or relative mode and may be set to operate in absolute mode when computer <b>400</b> is being remotely managed. This setting may be performed by a component of Rest of System <b>445</b>, such as BIOS <b>440</b> during boot or by an operating system. In addition, the component may be adapted to handle absolute mouse reports. In some embodiments of <figref>FIG. 4A</figref>, BIOS <b>440</b> is adapted to handle absolute mouse reports. This adaptation may, for example, extend to the setup engine of BIOS <b>440</b>. The setup engine is a graphical user interface (GUI) to enable a user to configure BIOS settings.</p>
      <p id="p-00038-en" num="0038">In addition, Rest of System <b>445</b> may suppress the drawing of a cursor when the active pointing device is acting is absolute mode. This suppression may include suppression both in screen images transmitted back to a remote computer and to screen images displayed on a local display device. As a result, on the remote computer, only one cursor is displayed, the cursor of a pointing device of the remote computer. The cursor display may always be up to date and fast-acting, since it will not be affected by network lag.</p>
      <p id="p-00039-en" num="0039">When the active pointing device is operating in relative mode, however, Rest of System <b>445</b> may enable the display of the cursor. As a result, if a local operator is using computer <b>400</b>, the cursor image may be included in the display on a display device of computer <b>400</b>. A cursor display is often useful for a pointing device operating in relative mode, since otherwise a user may not know what area of the screen is responding to input. Thus, many mice operate only in relative mode. In contrast, a cursor display may not be needed for some pointing devices which operate in absolute mode, such as tablets or pads. On these devices, the user knows that the area of the screen being touched is active.</p>
      <p id="p-00040-en" num="0040">In other embodiments, an operating system of Rest of System <b>445</b> may include a software driver that communicates directly with remote console controller <b>410</b> and makes the decision as to if it should display or suppress the local mouse cursor. In further embodiments, this driver may set virtual mouse <b>418</b> to absolute mode when it is being remotely controlled.</p>
      <p id="p-00041-en" num="0041">
        <figref>FIG. 4B</figref> shows computer <b>450</b> which includes remote console controller <b>460</b>, video controller <b>470</b>, and Rest of System <b>485</b>. Computer <b>450</b> may be similar to computer <b>400</b> of <figref>FIG. 4A</figref>. It may be connected over a network to a remote computer and controlled from the remote computer by means of remote console controller <b>460</b>. Remote console controller <b>460</b> contains digital video compressor <b>462</b>, networking software <b>464</b>, Ethernet controller <b>466</b>, and virtual mouse <b>468</b>. Video controller <b>470</b> includes video DAC <b>472</b>, hardware cursor location registers <b>474</b>, cursor generator <b>476</b>, hardware cursor image buffer <b>478</b>, image combiner <b>480</b>, frame buffer <b>482</b>, and raster generator <b>484</b>. DAC <b>472</b> may convert digital representations of screen images into analog images for display on a display device such as a monitor. Hardware cursor location registers <b>474</b> may store the current location of the cursor of the currently-active pointing device of computer <b>450</b>. Hardware cursor image buffer <b>478</b> may store an image or images of a cursor of computer <b>450</b>. It may store different cursors which represent different possible user interactions through a pointing device. Cursor generator <b>476</b> may generate the current image of the cursor in the current location.</p>
      <p id="p-00042-en" num="0042">Frame buffer <b>482</b> may store screen images generated by the operation of computer <b>450</b>. In many embodiments, the screen images may be stored as pixels. Frame buffer <b>482</b> may be composed of random-access memory (RAM). Raster generator <b>484</b> may receive data representing the screen images and may rasterize it for display on a display device. Image combiner may combine the rasterized screen images received from raster generator <b>484</b> and the cursor image received from <b>476</b> to produce a screen image containing an image of a cursor.</p>
      <p id="p-00043-en" num="0043">The cursor displayed may represent the location pointed to by virtual mouse <b>468</b>, which in turn may represent the location of a mouse pointer on a remote computer controlling computer <b>450</b>. Virtual mouse <b>468</b> may receive mouse reports from a remote computer through Ethernet controller <b>466</b> and networking software <b>464</b> and may transmit mouse reports to Rest of System <b>485</b>. Rest of System <b>485</b> may generate data for the production of screen images based upon inputs to computer <b>450</b>. The screen images may include a cursor. In the embodiment of <figref>FIG. 4B</figref>, the cursor image may be generated separately from the rest of the screen image.</p>
      <p id="p-00044-en" num="0044">Computer <b>450</b> may separate the cursor image from the rest of the screen image when sending it to remote console controller <b>460</b>. In computer <b>450</b>, unlike in computer <b>400</b> of <figref>FIG. 4A</figref>, the rasterized pixels are transmitted directly to digital video compressor <b>460</b>. They are not first sent to image combiner <b>480</b>. In addition, the location and image of the cursor are sent to networking software <b>464</b> from hardware cursor location registers <b>474</b> and hardware cursor image buffer <b>478</b>, respectively. The rasterized pixels and cursor image data may be sent separately over Ethernet controller <b>416</b> to a remote computer, such as remote management computer <b>150</b> of <figref>FIG. 1</figref>, which is controlling the operation of computer <b>450</b>.</p>
      <p id="p-00045-en" num="0045">In some embodiments, components of the remote computer may then suppress the display of the cursor of computer <b>450</b> by displaying the rasterized pixels without combining them with the cursor data. The suppression may be performed by a remote management client such as remote management client <b>155</b> of <figref>FIG. 1</figref>, by an operating system active on the remote computer, or by some other component of the remote computer. In other embodiments, the suppression may be performed at computer <b>450</b>. Computer <b>450</b> may omit sending remote console controller <b>460</b> data about the location and image of the cursor, or remote console controller <b>460</b> may omit transmitting the cursor image data to a remote computer.</p>
      <p id="p-00046-en" num="0046">The transmission of both the cursor data and the rasterized pixels enables the remote computer to display the cursor from computer <b>450</b> as desired. A user at the remote computer may, for example, move the pointing device of that computer outside of a window representing the remote management client software. The remote computer may then display the remote cursor in the current location pointed to by its pointing device, and display the cursor from computer <b>450</b> in a window representing the remote management client software. In addition, the remote computer may display the cursor received from computer <b>450</b> in the location for display of the remote cursor, substituting that image for the image of the cursor of the remote computer.</p>
      <p id="p-00047-en" num="0047">In other embodiments, data about the cursor image and location may be sent to a digital video compressor instead of bypassing it. In some embodiments, a cursor generator may send the cursor image to a digital video compressor or networking software of a remote console controller instead of the location and image being sent separately.</p>
      <p id="p-00048-en" num="0048">
        <figref>FIG. 5</figref> shows a flow diagram <b>500</b> that begins with an OS or BIOS mouse handler entry at block <b>510</b>. The entry may consist of a packet of mouse data, such as information about the location of a mouse or information about clicking or depressing mouse buttons. The entry may be to a mouse handler of a host system that is remotely managed, such as mouse handler <b>145</b> of host computer <b>110</b> of <figref>FIG. 1</figref>. At block <b>520</b>, the origin of the mouse data packet is determined. At block <b>530</b>, if the origin was from an absolute mouse of a remote console controller, such as remote console controller <b>460</b> of <figref>FIG. 4B</figref>, flow proceeds to block <b>540</b>. Otherwise, flow proceeds to block <b>590</b>.</p>
      <p id="p-00049-en" num="0049">At block <b>540</b>, the cursor display on the host system is hidden. The hiding may be performed by boot firmware during boot or by an operating system after boot. A screen image of the host system, omitting the cursor, may be transmitted to a remote computer controlling the host system. As a result, at block <b>550</b>, a user at a virtual management console, such as a virtual console displayed on remote management computer <b>150</b> of <figref>FIG. 1</figref> by remote management client software <b>155</b>, may see only one mouse pointerâthe mouse pointer from the remote computer. Its performance and feel may be exactly the same as the mouse pointer from the remote computer display on other applications on the remote computer. Further, unless the cursor is replaced by a cursor image sent from the host system, the cursor image may be exactly the same when the user is operating the remote management application as when the user is operating other applications on the remote computer.</p>
      <p id="p-00050-en" num="0050">At block <b>590</b>, the mouse data must have arrived from a regular mouse interface such as a mouse plugged in locally to the host system and operated by a local user. At block <b>580</b>, the host system enables cursor display on its screen images. At block <b>570</b>, the local user freely uses the local mouse and can view the cursor on the screen display. At block <b>560</b>, the mouse handler awaits further mouse events. If, at block <b>595</b>, there are further mouse events, the flow of <figref>FIG. 5</figref> returns to block <b>510</b>. Otherwise, the flow ends.</p>
      <p id="p-00051-en" num="0051">
        <figref>FIG. 6</figref> shows a flow diagram <b>600</b> that begins at block <b>605</b> with a video controller of a host computer receiving screen pixel values and a cursor location. The screen pixel values do not contain a cursor image. The video controller may be similar to video controller <b>470</b> of <figref>FIG. 4B</figref>. At block <b>610</b>, a raster generator, such as raster generator <b>484</b> of <figref>FIG. 4B</figref>, generates raster representations of screen images without the cursor image. At block <b>615</b>, a cursor generator, such as cursor generator <b>476</b> of <figref>FIG. 4B</figref>, receives data about the location and image of the cursor and generates an image of the cursor at its location on a screen of the host computer. The cursor generator may simply overlay the cursor image at the proper location on a blank screen image.</p>
      <p id="p-00052-en" num="0052">At block <b>620</b>, an image combiner, such as image combiner <b>480</b> of <figref>FIG. 4B</figref>, generates a screen image containing the cursor by combining the raster representation, which did not contain the cursor, and the cursor image properly located, which was received from the cursor generator. At block <b>625</b>, the image combiner transmits the screen image to the local video output for display on a video display of the host computer.</p>
      <p id="p-00053-en" num="0053">At block <b>630</b>, a digital video compressor of a remote console controller, such as remote console controller <b>460</b> of <figref>FIG. 4B</figref>, receives the raster representations of screen images. These representations do not contain an image of the cursor. The digital video compressor compresses the images for transmission to a remote computer controlling the operation of the host computer. At block <b>635</b>, network software of the remote console controller receives data about the cursor image and location for transmission to the remote computer. At block <b>640</b>, the network software transmits the cursor location, the cursor image, and the compressed raster image to the remote computer.</p>
      <p id="p-00054-en" num="0054">At block <b>650</b>, the remote computer receives the cursor location, the cursor image, and the compressed raster image of the screen of the local computer from the local computer. At block <b>660</b>, an image of the local cursor is inserted in the local screen image in the position of the remote cursor. The remote cursor location may, for example, be within a window generated by the local computer and displayed on the remote computer in a window of a virtual console for managing the local computer. Instead of displaying the remote cursor image at that location, the remote computer may display the image of the cursor of the local computer. The remote computer may thereby emulate the display seen on the local computer. At block <b>670</b>, the screen images sent from the local computer are displayed on the remote computer. In addition, the remote cursor is replaced in the display by the local cursor.</p>
      <p id="p-00055-en" num="0055">
        <figref>FIG. 7</figref> illustrates a block diagram of an exemplary embodiment of an information handling system, generally designated at <b>700</b>. In one form, the information handling system <b>700</b> can be a computer system such as a server. As shown in <figref>FIG. 7</figref>, the information handling system <b>700</b> can include a first physical processor <b>702</b> coupled to a first host bus <b>704</b> and can further include additional processors generally designated as n<sup>th </sup>physical processor <b>706</b> coupled to a second host bus <b>708</b>. The first physical processor <b>702</b> can be coupled to a chipset <b>710</b> via the first host bus <b>704</b>. Further, the n<sup>th </sup>physical processor <b>706</b> can be coupled to the chipset <b>710</b> via the second host bus <b>708</b>. The chipset <b>710</b> can support multiple processors and can allow for simultaneous processing of multiple processors and support the exchange of information within information handling system <b>700</b> during multiple processing operations.</p>
      <p id="p-00056-en" num="0056">According to one aspect, the chipset <b>710</b> can be referred to as a memory hub or a memory controller. For example, the chipset <b>710</b> can include an Accelerated Hub Architecture (AHA) that uses a dedicated bus to transfer data between first physical processor <b>702</b> and the n<sup>th </sup>physical processor <b>706</b>. For example, the chipset <b>710</b>, including an AHA enabled-chipset, can include a memory controller hub and an input/output (I/O) controller hub. As a memory controller hub, the chipset <b>710</b> can function to provide access to first physical processor <b>702</b> using first bus <b>704</b> and n<sup>th </sup>physical processor <b>706</b> using the second host bus <b>708</b>. The chipset <b>710</b> can also provide a memory interface for accessing memory <b>712</b> using a memory bus <b>714</b>. In a particular embodiment, the buses <b>704</b>, <b>708</b>, and <b>714</b> can be individual buses or part of the same bus. The chipset <b>710</b> can also provide bus control and can handle transfers between the buses <b>704</b>, <b>708</b>, and <b>714</b>.</p>
      <p id="p-00057-en" num="0057">According to another aspect, the chipset <b>710</b> can be generally considered an application specific chipset that provides connectivity to various buses, and integrates other system functions. For example, the chipset <b>710</b> can be provided using an IntelÂ® Hub Architecture (IHA) chipset that can also include two parts, a Graphics and AGP Memory Controller Hub (GMCH) and an I/O Controller Hub (ICH). For example, an Intel 820E, an 815E chipset, or any combination thereof, available from the Intel Corporation of Santa Clara, Calif., can provide at least a portion of the chipset <b>710</b>. The chipset <b>710</b> can also be packaged as an application specific integrated circuit (ASIC).</p>
      <p id="p-00058-en" num="0058">The information handling system <b>700</b> can also include a video graphics interface <b>722</b> that can be coupled to the chipset <b>710</b> using a third host bus <b>724</b>. In one form, the video graphics interface <b>722</b> can be a Peripheral Component Interconnect (PCI) Express interface to display content within a video display unit <b>726</b>. Other graphics interfaces may also be used. The video graphics interface <b>722</b> can provide a video display output <b>728</b> to the video display unit <b>726</b>. The video display unit <b>726</b> can include one or more types of video displays such as a flat panel display (FPD) or other type of display device.</p>
      <p id="p-00059-en" num="0059">The information handling system <b>700</b> can also include an I/O interface <b>730</b> that can be connected via an I/O bus <b>720</b> to the chipset <b>710</b>. The I/O interface <b>730</b> and I/O bus <b>720</b> can include industry standard buses or proprietary buses and respective interfaces or controllers. For example, the I/O bus <b>720</b> can also include a PCI bus or a high speed PCI-Express bus. In one embodiment, a PCI bus can be operated at approximately 66 MHz and a PCI-Express bus can be operated at approximately 728 MHz. PCI buses and PCI-Express buses can be provided to comply with industry standards for connecting and communicating between various PCI-enabled hardware devices. Other buses can also be provided in association with, or independent of, the I/O bus <b>720</b> including, but not limited to, industry standard buses or proprietary buses, such as Industry Standard Architecture (ISA), Small Computer Serial Interface (SCSI), Inter-Integrated Circuit (I<sup>2</sup>C), System Packet Interface (SPI), or Universal Serial buses (USBs).</p>
      <p id="p-00060-en" num="0060">In an alternate embodiment, the chipset <b>710</b> can be a chipset employing a Northbridge/Southbridge chipset configuration (not illustrated). For example, a Northbridge portion of the chipset <b>710</b> can communicate with the first physical processor <b>702</b> and can control interaction with the memory <b>712</b>, the I/O bus <b>720</b> that can be operable as a PCI bus, and activities for the video graphics interface <b>722</b>. The Northbridge portion can also communicate with the first physical processor <b>702</b> using first bus <b>704</b> and the second bus <b>708</b> coupled to the n<sup>th </sup>physical processor <b>706</b>. The chipset <b>710</b> can also include a Southbridge portion (not illustrated) of the chipset <b>710</b> and can handle I/O functions of the chipset <b>710</b>. The Southbridge portion can manage the basic forms of I/O such as Universal Serial Bus (USB), serial I/O, audio outputs, Integrated Drive Electronics (IDE), and ISA I/O for the information handling system <b>700</b>.</p>
      <p id="p-00061-en" num="0061">The information handling system <b>700</b> can further include a disk controller <b>732</b> coupled to the I/O bus <b>720</b>, and connecting one or more internal disk drives such as a hard disk drive (HDD) <b>734</b> and an optical disk drive (ODD) <b>736</b> such as a Read/Write Compact Disk (R/W CD), a Read/Write Digital Video Disk (R/W DVD), a Read/Write mini-Digital Video Disk (R/W mini-DVD), or other type of optical disk drive.</p>
      <p id="p-00062-en" num="0062">Although only a few exemplary embodiments have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the embodiments of the present disclosure. Accordingly, all such modifications are intended to be included within the scope of the embodiments of the present disclosure as defined in the following claims. In the claims, means-plus-function clauses are intended to cover the structures described herein as performing the recited function and not only structural equivalents, but also equivalent structures.</p>
    </detailed-desc>
  </description>
  <us-claim-statement>What is claimed is:</us-claim-statement>
  <claims id="claims_eng" lang="eng" format="original" date-changed="20161103">
    <claim num="1" id="clm-00001-en">
      <claim-text>
        <b>1</b>. A method comprising:
<claim-text>receiving at a host computer first reports from a remote computer of pointing device events occurring on the remote computer;</claim-text><claim-text>performing computations in the host computer based upon the first reports, the computations including determining locations pointed to by a pointing device of the host computer based upon the first reports, wherein the pointing device is active on the host computer and an operating system of the host computer determines the locations;</claim-text><claim-text>setting the pointing device in absolute mode, wherein the operating system of the host computer sets the active pointing device of the host computer in absolute mode;</claim-text><claim-text>generating screen images in the host computer based upon the computations and based on the active pointing device of the host computer being in absolute mode, wherein the screen images do not contain images of a cursor representing locations pointed to by the pointing device and the operating system generates the screen images in the host computer based upon the computations;</claim-text><claim-text>transmitting the screen images generated in the host computer to a remote console controller of the host computer; and</claim-text><claim-text>transmitting the screen images from the remote console controller of the host computer to the remote computer for display.</claim-text></claim-text>
    </claim>
    <claim num="2" id="clm-00002-en">
      <claim-text>
        <b>2</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, further comprising transmitting images of a cursor representing locations pointed to by the pointing device to the remote console controller separately from the transmission of the screen images.</claim-text>
    </claim>
    <claim num="3" id="clm-00003-en">
      <claim-text>
        <b>3</b>. The method of <claim-ref idref="clm-00002-en">claim 2</claim-ref>, wherein the transmitting the screen images comprises the remote console controller suppressing the images of the cursor in transmitting the screen images to the remote computer.</claim-text>
    </claim>
    <claim num="4" id="clm-00004-en">
      <claim-text>
        <b>4</b>. The method of <claim-ref idref="clm-00002-en">claim 2</claim-ref>, further comprising:
<claim-text>the remote console controller transmitting the images of the cursor to the remote computer; and</claim-text><claim-text>the remote computer suppressing the images of the cursor in displaying screen images from the host computer on a display of the remote computer.</claim-text></claim-text>
    </claim>
    <claim num="5" id="clm-00005-en">
      <claim-text>
        <b>5</b>. The method of <claim-ref idref="clm-00002-en">claim 2</claim-ref>, wherein the receiving the first reports comprises receiving the first reports by a virtual mouse of the remote console controller.</claim-text>
    </claim>
    <claim num="6" id="clm-00006-en">
      <claim-text>
        <b>6</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, further comprising:
<claim-text>transmitting images of the cursor representing locations pointed to by the pointing device from the host computer to the remote computer; and</claim-text><claim-text>replacing an image of a cursor of the remote computer on a screen image of the remote computer with an image of the images of the cursor of the host computer.</claim-text></claim-text>
    </claim>
    <claim num="7" id="clm-00007-en">
      <claim-text>
        <b>7</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, wherein the setting comprises setting a virtual mouse of a remote controller of the host computer in absolute mode.</claim-text>
    </claim>
    <claim num="8" id="clm-00008-en">
      <claim-text>
        <b>8</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, wherein the setting comprises setting the pointing device of the host computer in absolute mode based upon determining that the host computer is remotely managed by the remote computer.</claim-text>
    </claim>
    <claim num="9" id="clm-00009-en">
      <claim-text>
        <b>9</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, wherein the receiving the first reports comprises receiving the first reports of the pointing device events out-of-band.</claim-text>
    </claim>
    <claim num="10" id="clm-00010-en">
      <claim-text>
        <b>10</b>. The method of <claim-ref idref="clm-00001-en">claim 1</claim-ref>, further comprising suppressing display of the cursor representing locations pointed to by the pointing device on a display device of the host computer.</claim-text>
    </claim>
    <claim num="11" id="clm-00011-en">
      <claim-text>
        <b>11</b>. An information handling system comprising:
<claim-text>system firmware and software to receive reports of events of pointing devices of the information handling system and to perform computations based upon the reports, the computations including determining locations pointed to by the pointing devices of the information handling system, wherein the pointing devices are active on the information handling system and the system firmware and software determine the locations, and wherein the system firmware and software set the pointing devices in absolute mode;</claim-text><claim-text>a video controller to generate screen images based upon the computations and based upon the active pointing devices of the information handling system being in absolute mode, wherein the screen images do not contain images of cursors representing locations pointed to by the pointing devices and to separately generate images of the cursors, based upon the reports originating from a remote computer; and</claim-text><claim-text>a remote management controller to receive commands from the remote computer for management of the information handling system, to receive from the video controller the screen images and to separately receive from the video controller the cursor images, and to transmit screen images from the information handling system to the remote computer.</claim-text></claim-text>
    </claim>
    <claim num="12" id="clm-00012-en">
      <claim-text>
        <b>12</b>. The information handling system of <claim-ref idref="clm-00011-en">claim 11</claim-ref>, wherein the remote management controller is to transmit the cursor images to the remote computer and the remote computer is to suppress the cursor images in displaying the screen images from the information handling system.</claim-text>
    </claim>
    <claim num="13" id="clm-00013-en">
      <claim-text>
        <b>13</b>. The information handling system of <claim-ref idref="clm-00011-en">claim 11</claim-ref>, wherein:
<claim-text>the remote management controller includes a virtual mouse to receive mouse reports from the remote computer and to transmit the mouse reports to the system firmware and software; and</claim-text><claim-text>the video controller is to generate a cursor representing locations pointed to by the virtual mouse separately from the screen images.</claim-text></claim-text>
    </claim>
    <claim num="14" id="clm-00014-en">
      <claim-text>
        <b>14</b>. The information handling system of <claim-ref idref="clm-00011-en">claim 11</claim-ref>, wherein:
<claim-text>the video controller comprises hardware, the hardware including:</claim-text><claim-text>a frame buffer to hold the screen images;</claim-text><claim-text>a cursor generator to generate the images of the cursors; and</claim-text><claim-text>a combiner to combine the screen image and the cursor image; and</claim-text><claim-text>the remote management computer comprises:</claim-text><claim-text>video compression hardware to receive rasterized screen images not containing the cursor; and</claim-text><claim-text>networking software to receive the images of the cursors.</claim-text></claim-text>
    </claim>
    <claim num="15" id="clm-00015-en">
      <claim-text>
        <b>15</b>. A method comprising:
<claim-text>receiving at a host computer first reports from a remote computer of pointing device events occurring on the remote computer;</claim-text><claim-text>performing computations in the host computer based upon the first reports, the computations including determining locations pointed to by a pointing device of the host computer based upon the first reports, wherein the pointing device is active on the host computer and an operating system of the host computer determines the locations;</claim-text><claim-text>setting the pointing device in absolute mode, wherein the operating system of the host computer sets the active pointing device of the host computer in absolute mode;</claim-text><claim-text>generating screen images in the host computer based upon the computations and based on the active pointing device of the host computer being in absolute mode, wherein the screen images omit images of a cursor representing locations pointed to by the pointing device and the operating system generates the screen images in the host computer based upon the computations;</claim-text><claim-text>transmitting the screen images generated in the host computer to a remote console controller of the host computer;</claim-text><claim-text>transmitting images of a cursor representing locations pointed to by the pointing device to the remote console controller separately from the transmission of the screen images; and</claim-text><claim-text>transmitting the screen images from the remote console controller of the host computer to the remote computer for display, wherein the transmitting the screen images comprises the remote console controller suppressing the images of the cursor in transmitting the screen images to the remote computer.</claim-text></claim-text>
    </claim>
    <claim num="16" id="clm-00016-en">
      <claim-text>
        <b>16</b>. The method of <claim-ref idref="clm-00015-en">claim 15</claim-ref>, further comprising:
<claim-text>the remote console controller transmitting the images of the cursor to the remote computer; and</claim-text><claim-text>the remote computer suppressing the images of the cursor in displaying screen images from the host computer on a display of the remote computer.</claim-text></claim-text>
    </claim>
    <claim num="17" id="clm-00017-en">
      <claim-text>
        <b>17</b>. The method of <claim-ref idref="clm-00015-en">claim 15</claim-ref>, wherein the receiving the first reports comprises receiving the first reports by a virtual mouse of the remote console controller.</claim-text>
    </claim>
    <claim num="18" id="clm-00018-en">
      <claim-text>
        <b>18</b>. The method of <claim-ref idref="clm-00015-en">claim 15</claim-ref>, further comprising:
<claim-text>transmitting images of the cursor representing locations pointed to by the pointing device from the host computer to the remote computer; and</claim-text><claim-text>replacing an image of a cursor of the remote computer on a screen image of the remote computer with an image of the images of the cursor of the host computer.</claim-text></claim-text>
    </claim>
    <claim num="19" id="clm-00019-en">
      <claim-text>
        <b>19</b>. The method of <claim-ref idref="clm-00015-en">claim 15</claim-ref>, wherein the setting comprises setting a virtual mouse of a remote controller of the host computer in absolute mode.</claim-text>
    </claim>
    <claim num="20" id="clm-00020-en">
      <claim-text>
        <b>20</b>. The method of <claim-ref idref="clm-00015-en">claim 15</claim-ref>, wherein the setting comprises setting the pointing device of the host computer in absolute mode based upon determining that the host computer is remotely managed by the remote computer.</claim-text>
    </claim>
  </claims>
  <drawings id="drawings" format="original">
    <figure num="1">
      <img he="N/A" wi="N/A" file="US20160320942A1_00001.PNG" alt="clipped image" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00000.TIF" />
    </figure>
    <figure num="2">
      <img he="N/A" wi="N/A" file="US20160320942A1_00002.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00001.TIF" />
    </figure>
    <figure num="3">
      <img he="N/A" wi="N/A" file="US20160320942A1_00003.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00002.TIF" />
    </figure>
    <figure num="4">
      <img he="N/A" wi="N/A" file="US20160320942A1_00004.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00003.TIF" />
    </figure>
    <figure num="5">
      <img he="N/A" wi="N/A" file="US20160320942A1_00005.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00004.TIF" />
    </figure>
    <figure num="6">
      <img he="N/A" wi="N/A" file="US20160320942A1_00006.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00005.TIF" />
    </figure>
    <figure num="7">
      <img he="N/A" wi="N/A" file="US20160320942A1_00007.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00006.TIF" />
    </figure>
    <figure num="8">
      <img he="N/A" wi="N/A" file="US20160320942A1_00008.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00007.TIF" />
    </figure>
    <figure num="9">
      <img he="N/A" wi="N/A" file="US20160320942A1_00009.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00008.TIF" />
    </figure>
    <figure num="10">
      <img he="N/A" wi="N/A" file="US20160320942A1_00010.PNG" alt="drawing sheet" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00009.TIF" />
    </figure>
    <figure num="11">
      <img he="N/A" wi="N/A" file="US20160320942A1_00011.PNG" alt="thumbnail image" img-content="drawing" img-format="png" original="US20160320942A1-20161103-D00000.TIF" />
    </figure>
  </drawings>
  <image file="US20160320942A1.PDF" type="pdf" size="908128" pages="18" />
</lexisnexis-patent-document>